{
  "format_version": "0.1",
  "terraform_version": "0.13.4",
  "variables": {
    "azure_region": {
      "value": "westeurope"
    },
    "deployment_name": {
      "value": "test"
    },
    "hana_ha_enabled": {
      "value": true
    },
    "hana_installation_software_path": {
      "value": "asdasd"
    },
    "instance_number": {
      "value": "00"
    },
    "instance_type": {
      "value": "demo_sap_hana"
    },
    "os_admnistrator_name": {
      "value": "cloudadmin"
    },
    "sap_admin_password": {
      "value": ".Password1"
    },
    "ssh_authorized_key_file": {
      "value": "id_rsa.pub"
    },
    "storage_account_key": {
      "value": "asdasd"
    },
    "storage_account_name": {
      "value": "asdasd"
    },
    "system_identifier": {
      "value": "PRD"
    }
  },
  "planned_values": {
    "outputs": {
      "admin_user": {
        "sensitive": false,
        "value": "cloudadmin"
      },
      "bastion_ip": {
        "sensitive": false
      },
      "hana_ips": {
        "sensitive": false
      },
      "monitoring_server": {
        "sensitive": false,
        "value": "http://:3000"
      },
      "resource_group_url": {
        "sensitive": false,
        "value": "https://portal.azure.com/#@SUSERDBillingsuse.onmicrosoft.com/resource/subscriptions/c011786b-59d7-4817-880c-7cd8a6ca4b19/resourceGroups/rg-ha-sap-test/overview"
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "tls_private_key.salt_execution_ssh_keys",
          "mode": "managed",
          "type": "tls_private_key",
          "name": "salt_execution_ssh_keys",
          "provider_name": "registry.terraform.io/hashicorp/tls",
          "schema_version": 0,
          "values": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "rsa_bits": 2048
          }
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.bluehorizon.azurerm_network_security_group.mysecgroup",
              "mode": "managed",
              "type": "azurerm_network_security_group",
              "name": "mysecgroup",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "location": "westeurope",
                "name": "nsg-test",
                "resource_group_name": "rg-ha-sap-test",
                "security_rule": [
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "*",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "LOCAL",
                    "priority": 101,
                    "protocol": "*",
                    "source_address_prefix": "10.74.0.0/16",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "*",
                    "destination_port_ranges": [

                    ],
                    "direction": "Outbound",
                    "name": "OUTALL",
                    "priority": 100,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "22",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "SSH",
                    "priority": 1001,
                    "protocol": "Tcp",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "3000",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "grafana",
                    "priority": 1009,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "443",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "HTTPS",
                    "priority": 1003,
                    "protocol": "Tcp",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "7630",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "HAWK",
                    "priority": 1004,
                    "protocol": "Tcp",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "80",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "HTTP",
                    "priority": 1002,
                    "protocol": "Tcp",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "9090",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "prometheus",
                    "priority": 1008,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "9100",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "nodeExporter",
                    "priority": 1005,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "9664",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "haExporter",
                    "priority": 1007,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [

                    ],
                    "destination_application_security_group_ids": [

                    ],
                    "destination_port_range": "9668",
                    "destination_port_ranges": [

                    ],
                    "direction": "Inbound",
                    "name": "hanadbExporter",
                    "priority": 1006,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [

                    ],
                    "source_application_security_group_ids": [

                    ],
                    "source_port_range": "*",
                    "source_port_ranges": [

                    ]
                  }
                ],
                "tags": {
                  "workspace": "test"
                },
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_resource_group.myrg[0]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "myrg",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "location": "westeurope",
                "name": "rg-ha-sap-test",
                "tags": null,
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_route_table.myroutes",
              "mode": "managed",
              "type": "azurerm_route_table",
              "name": "myroutes",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "disable_bgp_route_propagation": false,
                "location": "westeurope",
                "name": "route-test",
                "resource_group_name": "rg-ha-sap-test",
                "route": [
                  {
                    "address_prefix": "10.74.0.0/16",
                    "name": "default",
                    "next_hop_in_ip_address": null,
                    "next_hop_type": "vnetlocal"
                  }
                ],
                "tags": {
                  "workspace": "test"
                },
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_storage_account.mytfstorageacc",
              "mode": "managed",
              "type": "azurerm_storage_account",
              "name": "mytfstorageacc",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 2,
              "values": {
                "account_kind": "StorageV2",
                "account_replication_type": "LRS",
                "account_tier": "Standard",
                "allow_blob_public_access": false,
                "custom_domain": [

                ],
                "enable_https_traffic_only": true,
                "is_hns_enabled": false,
                "location": "westeurope",
                "min_tls_version": "TLS1_0",
                "name": "stdiagtest",
                "resource_group_name": "rg-ha-sap-test",
                "static_website": [

                ],
                "tags": {
                  "workspace": "test"
                },
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_subnet.mysubnet[0]",
              "mode": "managed",
              "type": "azurerm_subnet",
              "name": "mysubnet",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefixes": [
                  "10.74.1.0/24"
                ],
                "delegation": [

                ],
                "enforce_private_link_endpoint_network_policies": false,
                "enforce_private_link_service_network_policies": false,
                "name": "snet-test",
                "resource_group_name": "rg-ha-sap-test",
                "service_endpoints": null,
                "timeouts": null,
                "virtual_network_name": "vnet-test"
              }
            },
            {
              "address": "module.bluehorizon.azurerm_subnet_network_security_group_association.mysubnet",
              "mode": "managed",
              "type": "azurerm_subnet_network_security_group_association",
              "name": "mysubnet",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_subnet_route_table_association.mysubnet",
              "mode": "managed",
              "type": "azurerm_subnet_route_table_association",
              "name": "mysubnet",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "timeouts": null
              }
            },
            {
              "address": "module.bluehorizon.azurerm_virtual_network.mynet[0]",
              "mode": "managed",
              "type": "azurerm_virtual_network",
              "name": "mynet",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_space": [
                  "10.74.0.0/16"
                ],
                "ddos_protection_plan": [

                ],
                "dns_servers": null,
                "location": "westeurope",
                "name": "vnet-test",
                "resource_group_name": "rg-ha-sap-test",
                "tags": {
                  "workspace": "test"
                },
                "timeouts": null
              }
            }
          ],
          "address": "module.bluehorizon",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.bluehorizon.module.local_execution.null_resource.pre_execution[0]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "pre_execution",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0,
                  "values": {
                    "triggers": null
                  }
                }
              ],
              "address": "module.bluehorizon.module.local_execution"
            },
            {
              "resources": [
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_availability_set.hana-availability-set[0]",
                  "mode": "managed",
                  "type": "azurerm_availability_set",
                  "name": "hana-availability-set",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "location": "westeurope",
                    "managed": true,
                    "name": "avset-hana",
                    "platform_fault_domain_count": 2,
                    "platform_update_domain_count": 5,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb.hana-load-balancer[0]",
                  "mode": "managed",
                  "type": "azurerm_lb",
                  "name": "hana-load-balancer",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "frontend_ip_configuration": [
                      {
                        "name": "lbfe-hana",
                        "private_ip_address": "10.74.1.12",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4",
                        "zones": null
                      }
                    ],
                    "location": "westeurope",
                    "name": "lb-hana",
                    "resource_group_name": "rg-ha-sap-test",
                    "sku": "Basic",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_backend_address_pool.hana-load-balancer[0]",
                  "mode": "managed",
                  "type": "azurerm_lb_backend_address_pool",
                  "name": "hana-load-balancer",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "lbbe-hana",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_probe.hana-load-balancer[0]",
                  "mode": "managed",
                  "type": "azurerm_lb_probe",
                  "name": "hana-load-balancer",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "interval_in_seconds": 5,
                    "name": "lbhp-hana",
                    "number_of_probes": 2,
                    "port": 62500,
                    "protocol": "Tcp",
                    "request_path": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30013\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30013",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30013,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30013,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30013",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30014\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30014",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30014,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30014,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30014",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30015\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30015",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30015,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30015,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30015",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30017\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30017",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30017,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30017,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30017",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30040\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30040",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30040,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30040,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30040",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30041\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30041",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30041,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30041,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30041",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30042\"]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hana-lb-rules",
                  "index": "30042",
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 30042,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 30042,
                    "idle_timeout_in_minutes": 30,
                    "name": "lbrule-hana-tcp-30042",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hanadb_exporter[0]",
                  "mode": "managed",
                  "type": "azurerm_lb_rule",
                  "name": "hanadb_exporter",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "backend_port": 9668,
                    "disable_outbound_snat": false,
                    "enable_floating_ip": true,
                    "enable_tcp_reset": null,
                    "frontend_ip_configuration_name": "lbfe-hana",
                    "frontend_port": 9668,
                    "idle_timeout_in_minutes": 30,
                    "name": "hanadb_exporter",
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_network_interface.hana[0]",
                  "mode": "managed",
                  "type": "azurerm_network_interface",
                  "name": "hana",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "enable_accelerated_networking": false,
                    "enable_ip_forwarding": false,
                    "ip_configuration": [
                      {
                        "name": "ipconf-primary",
                        "private_ip_address": "10.74.1.10",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4",
                        "public_ip_address_id": null
                      }
                    ],
                    "location": "westeurope",
                    "name": "nic-hana01",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_network_interface.hana[1]",
                  "mode": "managed",
                  "type": "azurerm_network_interface",
                  "name": "hana",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "enable_accelerated_networking": false,
                    "enable_ip_forwarding": false,
                    "ip_configuration": [
                      {
                        "name": "ipconf-primary",
                        "private_ip_address": "10.74.1.11",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4",
                        "public_ip_address_id": null
                      }
                    ],
                    "location": "westeurope",
                    "name": "nic-hana02",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_network_interface_backend_address_pool_association.hana[0]",
                  "mode": "managed",
                  "type": "azurerm_network_interface_backend_address_pool_association",
                  "name": "hana",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "ip_configuration_name": "ipconf-primary",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_network_interface_backend_address_pool_association.hana[1]",
                  "mode": "managed",
                  "type": "azurerm_network_interface_backend_address_pool_association",
                  "name": "hana",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "ip_configuration_name": "ipconf-primary",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_virtual_machine.hana[0]",
                  "mode": "managed",
                  "type": "azurerm_virtual_machine",
                  "name": "hana",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "additional_capabilities": [

                    ],
                    "boot_diagnostics": [
                      {
                        "enabled": true
                      }
                    ],
                    "delete_data_disks_on_termination": true,
                    "delete_os_disk_on_termination": true,
                    "location": "westeurope",
                    "name": "vmhana01",
                    "os_profile": [
                      {
                        "admin_password": "",
                        "admin_username": "cloudadmin",
                        "computer_name": "vmhana01"
                      }
                    ],
                    "os_profile_linux_config": [
                      {
                        "disable_password_authentication": true,
                        "ssh_keys": [
                          {
                            "path": "/home/cloudadmin/.ssh/authorized_keys"
                          }
                        ]
                      }
                    ],
                    "os_profile_secrets": [

                    ],
                    "os_profile_windows_config": [

                    ],
                    "plan": [

                    ],
                    "primary_network_interface_id": null,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "storage_data_disk": [
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 0,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data01",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 1,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data02",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "None",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 2,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data03",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "None",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 3,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data04",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 4,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data05",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 5,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data06",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 6,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Data07",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "storage_image_reference": [
                      {
                        "id": "",
                        "offer": "sles-sap-15-sp2",
                        "publisher": "SUSE",
                        "sku": "gen2",
                        "version": "latest"
                      }
                    ],
                    "storage_os_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "FromImage",
                        "image_uri": null,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana01-Os",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "vm_size": "Standard_E8s_v3",
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.azurerm_virtual_machine.hana[1]",
                  "mode": "managed",
                  "type": "azurerm_virtual_machine",
                  "name": "hana",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "additional_capabilities": [

                    ],
                    "boot_diagnostics": [
                      {
                        "enabled": true
                      }
                    ],
                    "delete_data_disks_on_termination": true,
                    "delete_os_disk_on_termination": true,
                    "location": "westeurope",
                    "name": "vmhana02",
                    "os_profile": [
                      {
                        "admin_password": "",
                        "admin_username": "cloudadmin",
                        "computer_name": "vmhana02"
                      }
                    ],
                    "os_profile_linux_config": [
                      {
                        "disable_password_authentication": true,
                        "ssh_keys": [
                          {
                            "path": "/home/cloudadmin/.ssh/authorized_keys"
                          }
                        ]
                      }
                    ],
                    "os_profile_secrets": [

                    ],
                    "os_profile_windows_config": [

                    ],
                    "plan": [

                    ],
                    "primary_network_interface_id": null,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "storage_data_disk": [
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 0,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data01",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 1,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data02",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "None",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 2,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data03",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "None",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 3,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data04",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 4,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data05",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 5,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data06",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      },
                      {
                        "caching": "ReadOnly",
                        "create_option": "Empty",
                        "disk_size_gb": 128,
                        "lun": 6,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Data07",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "storage_image_reference": [
                      {
                        "id": "",
                        "offer": "sles-sap-15-sp2",
                        "publisher": "SUSE",
                        "sku": "gen2",
                        "version": "latest"
                      }
                    ],
                    "storage_os_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "FromImage",
                        "image_uri": null,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-hana02-Os",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "vm_size": "Standard_E8s_v3",
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.data.azurerm_network_interface.hana[0]",
                  "mode": "data",
                  "type": "azurerm_network_interface",
                  "name": "hana",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "nic-hana01",
                    "resource_group_name": "rg-ha-sap-test"
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.data.azurerm_network_interface.hana[1]",
                  "mode": "data",
                  "type": "azurerm_network_interface",
                  "name": "hana",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "nic-hana02",
                    "resource_group_name": "rg-ha-sap-test"
                  }
                },
                {
                  "address": "module.bluehorizon.module.hana_node.null_resource.hana_node_provisioner[0]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "hana_node_provisioner",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0
                },
                {
                  "address": "module.bluehorizon.module.hana_node.null_resource.hana_node_provisioner[1]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "hana_node_provisioner",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0
                }
              ],
              "address": "module.bluehorizon.module.hana_node",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.hana_node.module.hana_on_destroy.null_resource.on_destroy[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "on_destroy",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    },
                    {
                      "address": "module.bluehorizon.module.hana_node.module.hana_on_destroy.null_resource.on_destroy[1]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "on_destroy",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.hana_node.module.hana_on_destroy"
                },
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.hana_node.module.hana_provision.null_resource.provision[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "provision",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    },
                    {
                      "address": "module.bluehorizon.module.hana_node.module.hana_provision.null_resource.provision[1]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "provision",
                      "index": 1,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.hana_node.module.hana_provision"
                }
              ]
            },
            {
              "resources": [
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_network_interface.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_network_interface",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "enable_accelerated_networking": false,
                    "enable_ip_forwarding": false,
                    "ip_configuration": [
                      {
                        "name": "ipconf-primary",
                        "private_ip_address": "10.74.2.5",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4"
                      }
                    ],
                    "location": "westeurope",
                    "name": "nic-bastion",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_network_security_group.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_network_security_group",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "location": "westeurope",
                    "name": "nsg-bastion",
                    "resource_group_name": "rg-ha-sap-test",
                    "security_rule": [
                      {
                        "access": "Allow",
                        "description": "",
                        "destination_address_prefix": "*",
                        "destination_address_prefixes": [

                        ],
                        "destination_application_security_group_ids": [

                        ],
                        "destination_port_range": "*",
                        "destination_port_ranges": [

                        ],
                        "direction": "Outbound",
                        "name": "OUTALL",
                        "priority": 101,
                        "protocol": "*",
                        "source_address_prefix": "*",
                        "source_address_prefixes": [

                        ],
                        "source_application_security_group_ids": [

                        ],
                        "source_port_range": "*",
                        "source_port_ranges": [

                        ]
                      },
                      {
                        "access": "Allow",
                        "description": "",
                        "destination_address_prefix": "10.74.2.5",
                        "destination_address_prefixes": [

                        ],
                        "destination_application_security_group_ids": [

                        ],
                        "destination_port_range": "22",
                        "destination_port_ranges": [

                        ],
                        "direction": "Inbound",
                        "name": "SSH",
                        "priority": 100,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_address_prefixes": [

                        ],
                        "source_application_security_group_ids": [

                        ],
                        "source_port_range": "*",
                        "source_port_ranges": [

                        ]
                      }
                    ],
                    "tags": null,
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_network_security_rule.grafana[0]",
                  "mode": "managed",
                  "type": "azurerm_network_security_rule",
                  "name": "grafana",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "access": "Allow",
                    "description": null,
                    "destination_address_prefix": "10.74.2.5",
                    "destination_address_prefixes": null,
                    "destination_application_security_group_ids": null,
                    "destination_port_range": "3000",
                    "destination_port_ranges": null,
                    "direction": "Inbound",
                    "name": "Grafana",
                    "network_security_group_name": "nsg-bastion",
                    "priority": 110,
                    "protocol": "Tcp",
                    "resource_group_name": "rg-ha-sap-test",
                    "source_address_prefix": "*",
                    "source_address_prefixes": null,
                    "source_application_security_group_ids": null,
                    "source_port_range": "*",
                    "source_port_ranges": null,
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_public_ip.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_public_ip",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "allocation_method": "Dynamic",
                    "domain_name_label": null,
                    "idle_timeout_in_minutes": 30,
                    "ip_version": "IPv4",
                    "location": "westeurope",
                    "name": "pip-bastion",
                    "public_ip_prefix_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "reverse_fqdn": null,
                    "sku": "Basic",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_subnet.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_subnet",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "address_prefixes": [
                      "10.74.2.0/24"
                    ],
                    "delegation": [

                    ],
                    "enforce_private_link_endpoint_network_policies": false,
                    "enforce_private_link_service_network_policies": false,
                    "name": "snet-bastion",
                    "resource_group_name": "rg-ha-sap-test",
                    "service_endpoints": null,
                    "timeouts": null,
                    "virtual_network_name": "vnet-test"
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_subnet_network_security_group_association.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_subnet_network_security_group_association",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.azurerm_virtual_machine.bastion[0]",
                  "mode": "managed",
                  "type": "azurerm_virtual_machine",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "additional_capabilities": [

                    ],
                    "boot_diagnostics": [
                      {
                        "enabled": true
                      }
                    ],
                    "delete_data_disks_on_termination": true,
                    "delete_os_disk_on_termination": true,
                    "location": "westeurope",
                    "name": "vmbastion",
                    "os_profile": [
                      {
                        "admin_password": "",
                        "admin_username": "cloudadmin",
                        "computer_name": "vmbastion"
                      }
                    ],
                    "os_profile_linux_config": [
                      {
                        "disable_password_authentication": true,
                        "ssh_keys": [
                          {
                            "path": "/home/cloudadmin/.ssh/authorized_keys"
                          }
                        ]
                      }
                    ],
                    "os_profile_secrets": [

                    ],
                    "os_profile_windows_config": [

                    ],
                    "plan": [

                    ],
                    "primary_network_interface_id": null,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "storage_image_reference": [
                      {
                        "id": "",
                        "offer": "sles-sap-15-sp2",
                        "publisher": "SUSE",
                        "sku": "gen2",
                        "version": "latest"
                      }
                    ],
                    "storage_os_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "FromImage",
                        "image_uri": null,
                        "managed_disk_type": "Standard_LRS",
                        "name": "disk-bastion-Os",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "vm_size": "Standard_B1s",
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.data.azurerm_public_ip.bastion[0]",
                  "mode": "data",
                  "type": "azurerm_public_ip",
                  "name": "bastion",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "pip-bastion",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.bastion.null_resource.bastion_provisioner[0]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "bastion_provisioner",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0
                }
              ],
              "address": "module.bluehorizon.module.bastion",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.bastion.module.bastion_on_destroy.null_resource.on_destroy[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "on_destroy",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.bastion.module.bastion_on_destroy"
                },
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.bastion.module.bastion_provision.null_resource.provision[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "provision",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.bastion.module.bastion_provision"
                }
              ]
            },
            {
              "resources": [
                {
                  "address": "module.bluehorizon.module.iscsi_server.azurerm_network_interface.iscsisrv[0]",
                  "mode": "managed",
                  "type": "azurerm_network_interface",
                  "name": "iscsisrv",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "enable_accelerated_networking": false,
                    "enable_ip_forwarding": false,
                    "ip_configuration": [
                      {
                        "name": "ipconf-primary",
                        "private_ip_address": "10.74.1.4",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4",
                        "public_ip_address_id": null
                      }
                    ],
                    "location": "westeurope",
                    "name": "nic-iscsisrv01",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.iscsi_server.azurerm_virtual_machine.iscsisrv[0]",
                  "mode": "managed",
                  "type": "azurerm_virtual_machine",
                  "name": "iscsisrv",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "additional_capabilities": [

                    ],
                    "boot_diagnostics": [
                      {
                        "enabled": true
                      }
                    ],
                    "delete_data_disks_on_termination": true,
                    "delete_os_disk_on_termination": true,
                    "location": "westeurope",
                    "name": "vmiscsisrv01",
                    "os_profile": [
                      {
                        "admin_password": "",
                        "admin_username": "cloudadmin",
                        "computer_name": "vmiscsisrv"
                      }
                    ],
                    "os_profile_linux_config": [
                      {
                        "disable_password_authentication": true,
                        "ssh_keys": [
                          {
                            "path": "/home/cloudadmin/.ssh/authorized_keys"
                          }
                        ]
                      }
                    ],
                    "os_profile_secrets": [

                    ],
                    "os_profile_windows_config": [

                    ],
                    "plan": [

                    ],
                    "primary_network_interface_id": null,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "storage_data_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "Empty",
                        "disk_size_gb": 10,
                        "lun": 0,
                        "managed_disk_type": "StandardSSD_LRS",
                        "name": "disk-iscsisrv01-Data01",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "storage_image_reference": [
                      {
                        "id": "",
                        "offer": "sles-sap-15-sp2",
                        "publisher": "SUSE",
                        "sku": "gen2",
                        "version": "latest"
                      }
                    ],
                    "storage_os_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "FromImage",
                        "image_uri": null,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-iscsisrv01-Os",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "vm_size": "Standard_D2s_v3",
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.iscsi_server.data.azurerm_network_interface.iscsisrv[0]",
                  "mode": "data",
                  "type": "azurerm_network_interface",
                  "name": "iscsisrv",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "nic-iscsisrv01",
                    "resource_group_name": "rg-ha-sap-test"
                  }
                },
                {
                  "address": "module.bluehorizon.module.iscsi_server.null_resource.iscsi_provisioner[0]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "iscsi_provisioner",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0
                }
              ],
              "address": "module.bluehorizon.module.iscsi_server",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.iscsi_server.module.iscsi_on_destroy.null_resource.on_destroy[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "on_destroy",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.iscsi_server.module.iscsi_on_destroy"
                },
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.iscsi_server.module.iscsi_provision.null_resource.provision[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "provision",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.iscsi_server.module.iscsi_provision"
                }
              ]
            },
            {
              "resources": [
                {
                  "address": "module.bluehorizon.module.monitoring.azurerm_network_interface.monitoring[0]",
                  "mode": "managed",
                  "type": "azurerm_network_interface",
                  "name": "monitoring",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "enable_accelerated_networking": false,
                    "enable_ip_forwarding": false,
                    "ip_configuration": [
                      {
                        "name": "ipconf-primary",
                        "private_ip_address": "10.74.1.5",
                        "private_ip_address_allocation": "static",
                        "private_ip_address_version": "IPv4",
                        "public_ip_address_id": null
                      }
                    ],
                    "location": "westeurope",
                    "name": "nic-monitoring",
                    "resource_group_name": "rg-ha-sap-test",
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.monitoring.azurerm_virtual_machine.monitoring[0]",
                  "mode": "managed",
                  "type": "azurerm_virtual_machine",
                  "name": "monitoring",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "additional_capabilities": [

                    ],
                    "boot_diagnostics": [
                      {
                        "enabled": true
                      }
                    ],
                    "delete_data_disks_on_termination": true,
                    "delete_os_disk_on_termination": true,
                    "location": "westeurope",
                    "name": "vmmonitoring",
                    "os_profile": [
                      {
                        "admin_password": "",
                        "admin_username": "cloudadmin",
                        "computer_name": "vmmonitoring"
                      }
                    ],
                    "os_profile_linux_config": [
                      {
                        "disable_password_authentication": true,
                        "ssh_keys": [
                          {
                            "path": "/home/cloudadmin/.ssh/authorized_keys"
                          }
                        ]
                      }
                    ],
                    "os_profile_secrets": [

                    ],
                    "os_profile_windows_config": [

                    ],
                    "plan": [

                    ],
                    "primary_network_interface_id": null,
                    "proximity_placement_group_id": null,
                    "resource_group_name": "rg-ha-sap-test",
                    "storage_data_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "Empty",
                        "disk_size_gb": 10,
                        "lun": 0,
                        "managed_disk_type": "Standard_LRS",
                        "name": "disk-monitoring-Data01",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "storage_image_reference": [
                      {
                        "id": "",
                        "offer": "sles-sap-15-sp2",
                        "publisher": "SUSE",
                        "sku": "gen2",
                        "version": "latest"
                      }
                    ],
                    "storage_os_disk": [
                      {
                        "caching": "ReadWrite",
                        "create_option": "FromImage",
                        "image_uri": null,
                        "managed_disk_type": "Premium_LRS",
                        "name": "disk-monitoring-Os",
                        "vhd_uri": null,
                        "write_accelerator_enabled": false
                      }
                    ],
                    "tags": {
                      "workspace": "test"
                    },
                    "timeouts": null,
                    "vm_size": "Standard_D2s_v3",
                    "zones": null
                  }
                },
                {
                  "address": "module.bluehorizon.module.monitoring.data.azurerm_network_interface.monitoring[0]",
                  "mode": "data",
                  "type": "azurerm_network_interface",
                  "name": "monitoring",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/azurerm",
                  "schema_version": 0,
                  "values": {
                    "name": "nic-monitoring",
                    "resource_group_name": "rg-ha-sap-test"
                  }
                },
                {
                  "address": "module.bluehorizon.module.monitoring.null_resource.monitoring_provisioner[0]",
                  "mode": "managed",
                  "type": "null_resource",
                  "name": "monitoring_provisioner",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/null",
                  "schema_version": 0
                }
              ],
              "address": "module.bluehorizon.module.monitoring",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.monitoring.module.monitoring_on_destroy.null_resource.on_destroy[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "on_destroy",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.monitoring.module.monitoring_on_destroy"
                },
                {
                  "resources": [
                    {
                      "address": "module.bluehorizon.module.monitoring.module.monitoring_provision.null_resource.provision[0]",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "provision",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/null",
                      "schema_version": 0
                    }
                  ],
                  "address": "module.bluehorizon.module.monitoring.module.monitoring_provision"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "module.bluehorizon.azurerm_network_security_group.mysecgroup",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "mysecgroup",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "westeurope",
          "name": "nsg-test",
          "resource_group_name": "rg-ha-sap-test",
          "security_rule": [
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "*",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "LOCAL",
              "priority": 101,
              "protocol": "*",
              "source_address_prefix": "10.74.0.0/16",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "*",
              "destination_port_ranges": [

              ],
              "direction": "Outbound",
              "name": "OUTALL",
              "priority": 100,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "22",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "SSH",
              "priority": 1001,
              "protocol": "Tcp",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "3000",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "grafana",
              "priority": 1009,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "443",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "HTTPS",
              "priority": 1003,
              "protocol": "Tcp",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "7630",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "HAWK",
              "priority": 1004,
              "protocol": "Tcp",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "80",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "HTTP",
              "priority": 1002,
              "protocol": "Tcp",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "9090",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "prometheus",
              "priority": 1008,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "9100",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "nodeExporter",
              "priority": 1005,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "9664",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "haExporter",
              "priority": 1007,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "9668",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "hanadbExporter",
              "priority": 1006,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "security_rule": [
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_resource_group.myrg[0]",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "myrg",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "westeurope",
          "name": "rg-ha-sap-test",
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_route_table.myroutes",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "myroutes",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "disable_bgp_route_propagation": false,
          "location": "westeurope",
          "name": "route-test",
          "resource_group_name": "rg-ha-sap-test",
          "route": [
            {
              "address_prefix": "10.74.0.0/16",
              "name": "default",
              "next_hop_in_ip_address": null,
              "next_hop_type": "vnetlocal"
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route": [
            {
            }
          ],
          "subnets": true,
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_storage_account.mytfstorageacc",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_storage_account",
      "name": "mytfstorageacc",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "account_kind": "StorageV2",
          "account_replication_type": "LRS",
          "account_tier": "Standard",
          "allow_blob_public_access": false,
          "custom_domain": [

          ],
          "enable_https_traffic_only": true,
          "is_hns_enabled": false,
          "location": "westeurope",
          "min_tls_version": "TLS1_0",
          "name": "stdiagtest",
          "resource_group_name": "rg-ha-sap-test",
          "static_website": [

          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "access_tier": true,
          "blob_properties": true,
          "custom_domain": [

          ],
          "id": true,
          "identity": true,
          "large_file_share_enabled": true,
          "network_rules": true,
          "primary_access_key": true,
          "primary_blob_connection_string": true,
          "primary_blob_endpoint": true,
          "primary_blob_host": true,
          "primary_connection_string": true,
          "primary_dfs_endpoint": true,
          "primary_dfs_host": true,
          "primary_file_endpoint": true,
          "primary_file_host": true,
          "primary_location": true,
          "primary_queue_endpoint": true,
          "primary_queue_host": true,
          "primary_table_endpoint": true,
          "primary_table_host": true,
          "primary_web_endpoint": true,
          "primary_web_host": true,
          "queue_properties": true,
          "secondary_access_key": true,
          "secondary_blob_connection_string": true,
          "secondary_blob_endpoint": true,
          "secondary_blob_host": true,
          "secondary_connection_string": true,
          "secondary_dfs_endpoint": true,
          "secondary_dfs_host": true,
          "secondary_file_endpoint": true,
          "secondary_file_host": true,
          "secondary_location": true,
          "secondary_queue_endpoint": true,
          "secondary_queue_host": true,
          "secondary_table_endpoint": true,
          "secondary_table_host": true,
          "secondary_web_endpoint": true,
          "secondary_web_host": true,
          "static_website": [

          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_subnet.mysubnet[0]",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "mysubnet",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address_prefixes": [
            "10.74.1.0/24"
          ],
          "delegation": [

          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "name": "snet-test",
          "resource_group_name": "rg-ha-sap-test",
          "service_endpoints": null,
          "timeouts": null,
          "virtual_network_name": "vnet-test"
        },
        "after_unknown": {
          "address_prefix": true,
          "address_prefixes": [
            false
          ],
          "delegation": [

          ],
          "id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_subnet_network_security_group_association.mysubnet",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_subnet_network_security_group_association",
      "name": "mysubnet",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "network_security_group_id": true,
          "subnet_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_subnet_route_table_association.mysubnet",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_subnet_route_table_association",
      "name": "mysubnet",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.azurerm_virtual_network.mynet[0]",
      "module_address": "module.bluehorizon",
      "mode": "managed",
      "type": "azurerm_virtual_network",
      "name": "mynet",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address_space": [
            "10.74.0.0/16"
          ],
          "ddos_protection_plan": [

          ],
          "dns_servers": null,
          "location": "westeurope",
          "name": "vnet-test",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "address_space": [
            false
          ],
          "ddos_protection_plan": [

          ],
          "guid": true,
          "id": true,
          "subnet": true,
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_network_interface.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enable_accelerated_networking": false,
          "enable_ip_forwarding": false,
          "ip_configuration": [
            {
              "name": "ipconf-primary",
              "private_ip_address": "10.74.2.5",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4"
            }
          ],
          "location": "westeurope",
          "name": "nic-bastion",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "id": true,
          "internal_dns_name_label": true,
          "internal_domain_name_suffix": true,
          "ip_configuration": [
            {
              "primary": true,
              "public_ip_address_id": true,
              "subnet_id": true
            }
          ],
          "mac_address": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          },
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_network_security_group.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "westeurope",
          "name": "nsg-bastion",
          "resource_group_name": "rg-ha-sap-test",
          "security_rule": [
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "*",
              "destination_port_ranges": [

              ],
              "direction": "Outbound",
              "name": "OUTALL",
              "priority": 101,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.74.2.5",
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_range": "22",
              "destination_port_ranges": [

              ],
              "direction": "Inbound",
              "name": "SSH",
              "priority": 100,
              "protocol": "Tcp",
              "source_address_prefix": "*",
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_range": "*",
              "source_port_ranges": [

              ]
            }
          ],
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "security_rule": [
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            },
            {
              "destination_address_prefixes": [

              ],
              "destination_application_security_group_ids": [

              ],
              "destination_port_ranges": [

              ],
              "source_address_prefixes": [

              ],
              "source_application_security_group_ids": [

              ],
              "source_port_ranges": [

              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_network_security_rule.grafana[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "grafana",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access": "Allow",
          "description": null,
          "destination_address_prefix": "10.74.2.5",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "3000",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "name": "Grafana",
          "network_security_group_name": "nsg-bastion",
          "priority": 110,
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "source_address_prefix": "*",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_public_ip.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "allocation_method": "Dynamic",
          "domain_name_label": null,
          "idle_timeout_in_minutes": 30,
          "ip_version": "IPv4",
          "location": "westeurope",
          "name": "pip-bastion",
          "public_ip_prefix_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "reverse_fqdn": null,
          "sku": "Basic",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "zones": null
        },
        "after_unknown": {
          "fqdn": true,
          "id": true,
          "ip_address": true,
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_subnet.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address_prefixes": [
            "10.74.2.0/24"
          ],
          "delegation": [

          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "name": "snet-bastion",
          "resource_group_name": "rg-ha-sap-test",
          "service_endpoints": null,
          "timeouts": null,
          "virtual_network_name": "vnet-test"
        },
        "after_unknown": {
          "address_prefix": true,
          "address_prefixes": [
            false
          ],
          "delegation": [

          ],
          "id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_subnet_network_security_group_association.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_subnet_network_security_group_association",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "network_security_group_id": true,
          "subnet_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.azurerm_virtual_machine.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "additional_capabilities": [

          ],
          "boot_diagnostics": [
            {
              "enabled": true
            }
          ],
          "delete_data_disks_on_termination": true,
          "delete_os_disk_on_termination": true,
          "location": "westeurope",
          "name": "vmbastion",
          "os_profile": [
            {
              "admin_password": "",
              "admin_username": "cloudadmin",
              "computer_name": "vmbastion"
            }
          ],
          "os_profile_linux_config": [
            {
              "disable_password_authentication": true,
              "ssh_keys": [
                {
                  "path": "/home/cloudadmin/.ssh/authorized_keys"
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "primary_network_interface_id": null,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "storage_image_reference": [
            {
              "id": "",
              "offer": "sles-sap-15-sp2",
              "publisher": "SUSE",
              "sku": "gen2",
              "version": "latest"
            }
          ],
          "storage_os_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "FromImage",
              "image_uri": null,
              "managed_disk_type": "Standard_LRS",
              "name": "disk-bastion-Os",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "vm_size": "Standard_B1s",
          "zones": null
        },
        "after_unknown": {
          "additional_capabilities": [

          ],
          "availability_set_id": true,
          "boot_diagnostics": [
            {
              "storage_uri": true
            }
          ],
          "id": true,
          "identity": true,
          "license_type": true,
          "network_interface_ids": true,
          "os_profile": [
            {
              "custom_data": true
            }
          ],
          "os_profile_linux_config": [
            {
              "ssh_keys": [
                {
                  "key_data": true
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "storage_data_disk": true,
          "storage_image_reference": [
            {
            }
          ],
          "storage_os_disk": [
            {
              "disk_size_gb": true,
              "managed_disk_id": true,
              "os_type": true
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.data.azurerm_public_ip.bastion[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "data",
      "type": "azurerm_public_ip",
      "name": "bastion",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "name": "pip-bastion",
          "resource_group_name": "rg-ha-sap-test",
          "tags": null
        },
        "after_unknown": {
          "allocation_method": true,
          "domain_name_label": true,
          "fqdn": true,
          "id": true,
          "idle_timeout_in_minutes": true,
          "ip_address": true,
          "ip_version": true,
          "location": true,
          "reverse_fqdn": true,
          "sku": true,
          "timeouts": true,
          "zones": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.module.bastion_on_destroy.null_resource.on_destroy[0]",
      "module_address": "module.bluehorizon.module.bastion.module.bastion_on_destroy",
      "mode": "managed",
      "type": "null_resource",
      "name": "on_destroy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.module.bastion_provision.null_resource.provision[0]",
      "module_address": "module.bluehorizon.module.bastion.module.bastion_provision",
      "mode": "managed",
      "type": "null_resource",
      "name": "provision",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.bastion.null_resource.bastion_provisioner[0]",
      "module_address": "module.bluehorizon.module.bastion",
      "mode": "managed",
      "type": "null_resource",
      "name": "bastion_provisioner",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_availability_set.hana-availability-set[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_availability_set",
      "name": "hana-availability-set",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "westeurope",
          "managed": true,
          "name": "avset-hana",
          "platform_fault_domain_count": 2,
          "platform_update_domain_count": 5,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb.hana-load-balancer[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb",
      "name": "hana-load-balancer",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "frontend_ip_configuration": [
            {
              "name": "lbfe-hana",
              "private_ip_address": "10.74.1.12",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4",
              "zones": null
            }
          ],
          "location": "westeurope",
          "name": "lb-hana",
          "resource_group_name": "rg-ha-sap-test",
          "sku": "Basic",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "frontend_ip_configuration": [
            {
              "id": true,
              "inbound_nat_rules": true,
              "load_balancer_rules": true,
              "outbound_rules": true,
              "public_ip_address_id": true,
              "public_ip_prefix_id": true,
              "subnet_id": true
            }
          ],
          "id": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_backend_address_pool.hana-load-balancer[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_backend_address_pool",
      "name": "hana-load-balancer",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "lbbe-hana",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_ip_configurations": true,
          "id": true,
          "load_balancing_rules": true,
          "loadbalancer_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_probe.hana-load-balancer[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_probe",
      "name": "hana-load-balancer",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "interval_in_seconds": 5,
          "name": "lbhp-hana",
          "number_of_probes": 2,
          "port": 62500,
          "protocol": "Tcp",
          "request_path": null,
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "load_balancer_rules": true,
          "loadbalancer_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30013\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30013",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30013,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30013,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30013",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30014\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30014",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30014,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30014,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30014",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30015\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30015",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30015,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30015,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30015",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30017\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30017",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30017,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30017,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30017",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30040\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30040",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30040,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30040,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30040",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30041\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30041",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30041,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30041,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30041",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hana-lb-rules[\"30042\"]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hana-lb-rules",
      "index": "30042",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 30042,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 30042,
          "idle_timeout_in_minutes": 30,
          "name": "lbrule-hana-tcp-30042",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_lb_rule.hanadb_exporter[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_lb_rule",
      "name": "hanadb_exporter",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "backend_port": 9668,
          "disable_outbound_snat": false,
          "enable_floating_ip": true,
          "enable_tcp_reset": null,
          "frontend_ip_configuration_name": "lbfe-hana",
          "frontend_port": 9668,
          "idle_timeout_in_minutes": 30,
          "name": "hanadb_exporter",
          "protocol": "Tcp",
          "resource_group_name": "rg-ha-sap-test",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "frontend_ip_configuration_id": true,
          "id": true,
          "load_distribution": true,
          "loadbalancer_id": true,
          "probe_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_network_interface.hana[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "hana",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enable_accelerated_networking": false,
          "enable_ip_forwarding": false,
          "ip_configuration": [
            {
              "name": "ipconf-primary",
              "private_ip_address": "10.74.1.10",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4",
              "public_ip_address_id": null
            }
          ],
          "location": "westeurope",
          "name": "nic-hana01",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "id": true,
          "internal_dns_name_label": true,
          "internal_domain_name_suffix": true,
          "ip_configuration": [
            {
              "primary": true,
              "subnet_id": true
            }
          ],
          "mac_address": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          },
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_network_interface.hana[1]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "hana",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enable_accelerated_networking": false,
          "enable_ip_forwarding": false,
          "ip_configuration": [
            {
              "name": "ipconf-primary",
              "private_ip_address": "10.74.1.11",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4",
              "public_ip_address_id": null
            }
          ],
          "location": "westeurope",
          "name": "nic-hana02",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "id": true,
          "internal_dns_name_label": true,
          "internal_domain_name_suffix": true,
          "ip_configuration": [
            {
              "primary": true,
              "subnet_id": true
            }
          ],
          "mac_address": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          },
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_network_interface_backend_address_pool_association.hana[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_network_interface_backend_address_pool_association",
      "name": "hana",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ip_configuration_name": "ipconf-primary",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "id": true,
          "network_interface_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_network_interface_backend_address_pool_association.hana[1]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_network_interface_backend_address_pool_association",
      "name": "hana",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ip_configuration_name": "ipconf-primary",
          "timeouts": null
        },
        "after_unknown": {
          "backend_address_pool_id": true,
          "id": true,
          "network_interface_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_virtual_machine.hana[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "hana",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "additional_capabilities": [

          ],
          "boot_diagnostics": [
            {
              "enabled": true
            }
          ],
          "delete_data_disks_on_termination": true,
          "delete_os_disk_on_termination": true,
          "location": "westeurope",
          "name": "vmhana01",
          "os_profile": [
            {
              "admin_password": "",
              "admin_username": "cloudadmin",
              "computer_name": "vmhana01"
            }
          ],
          "os_profile_linux_config": [
            {
              "disable_password_authentication": true,
              "ssh_keys": [
                {
                  "path": "/home/cloudadmin/.ssh/authorized_keys"
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "primary_network_interface_id": null,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "storage_data_disk": [
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 0,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data01",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 1,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data02",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "None",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 2,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data03",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "None",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 3,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data04",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 4,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data05",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 5,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data06",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 6,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Data07",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "storage_image_reference": [
            {
              "id": "",
              "offer": "sles-sap-15-sp2",
              "publisher": "SUSE",
              "sku": "gen2",
              "version": "latest"
            }
          ],
          "storage_os_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "FromImage",
              "image_uri": null,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana01-Os",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "vm_size": "Standard_E8s_v3",
          "zones": null
        },
        "after_unknown": {
          "additional_capabilities": [

          ],
          "availability_set_id": true,
          "boot_diagnostics": [
            {
              "storage_uri": true
            }
          ],
          "id": true,
          "identity": true,
          "license_type": true,
          "network_interface_ids": true,
          "os_profile": [
            {
              "custom_data": true
            }
          ],
          "os_profile_linux_config": [
            {
              "ssh_keys": [
                {
                  "key_data": true
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "storage_data_disk": [
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            }
          ],
          "storage_image_reference": [
            {
            }
          ],
          "storage_os_disk": [
            {
              "disk_size_gb": true,
              "managed_disk_id": true,
              "os_type": true
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.azurerm_virtual_machine.hana[1]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "hana",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "additional_capabilities": [

          ],
          "boot_diagnostics": [
            {
              "enabled": true
            }
          ],
          "delete_data_disks_on_termination": true,
          "delete_os_disk_on_termination": true,
          "location": "westeurope",
          "name": "vmhana02",
          "os_profile": [
            {
              "admin_password": "",
              "admin_username": "cloudadmin",
              "computer_name": "vmhana02"
            }
          ],
          "os_profile_linux_config": [
            {
              "disable_password_authentication": true,
              "ssh_keys": [
                {
                  "path": "/home/cloudadmin/.ssh/authorized_keys"
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "primary_network_interface_id": null,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "storage_data_disk": [
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 0,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data01",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 1,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data02",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "None",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 2,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data03",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "None",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 3,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data04",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 4,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data05",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 5,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data06",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            },
            {
              "caching": "ReadOnly",
              "create_option": "Empty",
              "disk_size_gb": 128,
              "lun": 6,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Data07",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "storage_image_reference": [
            {
              "id": "",
              "offer": "sles-sap-15-sp2",
              "publisher": "SUSE",
              "sku": "gen2",
              "version": "latest"
            }
          ],
          "storage_os_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "FromImage",
              "image_uri": null,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-hana02-Os",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "vm_size": "Standard_E8s_v3",
          "zones": null
        },
        "after_unknown": {
          "additional_capabilities": [

          ],
          "availability_set_id": true,
          "boot_diagnostics": [
            {
              "storage_uri": true
            }
          ],
          "id": true,
          "identity": true,
          "license_type": true,
          "network_interface_ids": true,
          "os_profile": [
            {
              "custom_data": true
            }
          ],
          "os_profile_linux_config": [
            {
              "ssh_keys": [
                {
                  "key_data": true
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "storage_data_disk": [
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            },
            {
              "managed_disk_id": true
            }
          ],
          "storage_image_reference": [
            {
            }
          ],
          "storage_os_disk": [
            {
              "disk_size_gb": true,
              "managed_disk_id": true,
              "os_type": true
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.data.azurerm_network_interface.hana[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "data",
      "type": "azurerm_network_interface",
      "name": "hana",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "name": "nic-hana01",
          "resource_group_name": "rg-ha-sap-test"
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "enable_accelerated_networking": true,
          "enable_ip_forwarding": true,
          "id": true,
          "internal_dns_name_label": true,
          "ip_configuration": true,
          "location": true,
          "mac_address": true,
          "network_security_group_id": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": true,
          "timeouts": true,
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.data.azurerm_network_interface.hana[1]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "data",
      "type": "azurerm_network_interface",
      "name": "hana",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "name": "nic-hana02",
          "resource_group_name": "rg-ha-sap-test"
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "enable_accelerated_networking": true,
          "enable_ip_forwarding": true,
          "id": true,
          "internal_dns_name_label": true,
          "ip_configuration": true,
          "location": true,
          "mac_address": true,
          "network_security_group_id": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": true,
          "timeouts": true,
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.module.hana_on_destroy.null_resource.on_destroy[0]",
      "module_address": "module.bluehorizon.module.hana_node.module.hana_on_destroy",
      "mode": "managed",
      "type": "null_resource",
      "name": "on_destroy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.module.hana_on_destroy.null_resource.on_destroy[1]",
      "module_address": "module.bluehorizon.module.hana_node.module.hana_on_destroy",
      "mode": "managed",
      "type": "null_resource",
      "name": "on_destroy",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.module.hana_provision.null_resource.provision[0]",
      "module_address": "module.bluehorizon.module.hana_node.module.hana_provision",
      "mode": "managed",
      "type": "null_resource",
      "name": "provision",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.module.hana_provision.null_resource.provision[1]",
      "module_address": "module.bluehorizon.module.hana_node.module.hana_provision",
      "mode": "managed",
      "type": "null_resource",
      "name": "provision",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.null_resource.hana_node_provisioner[0]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "null_resource",
      "name": "hana_node_provisioner",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.hana_node.null_resource.hana_node_provisioner[1]",
      "module_address": "module.bluehorizon.module.hana_node",
      "mode": "managed",
      "type": "null_resource",
      "name": "hana_node_provisioner",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.azurerm_network_interface.iscsisrv[0]",
      "module_address": "module.bluehorizon.module.iscsi_server",
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "iscsisrv",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enable_accelerated_networking": false,
          "enable_ip_forwarding": false,
          "ip_configuration": [
            {
              "name": "ipconf-primary",
              "private_ip_address": "10.74.1.4",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4",
              "public_ip_address_id": null
            }
          ],
          "location": "westeurope",
          "name": "nic-iscsisrv01",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "id": true,
          "internal_dns_name_label": true,
          "internal_domain_name_suffix": true,
          "ip_configuration": [
            {
              "primary": true,
              "subnet_id": true
            }
          ],
          "mac_address": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          },
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.azurerm_virtual_machine.iscsisrv[0]",
      "module_address": "module.bluehorizon.module.iscsi_server",
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "iscsisrv",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "additional_capabilities": [

          ],
          "boot_diagnostics": [
            {
              "enabled": true
            }
          ],
          "delete_data_disks_on_termination": true,
          "delete_os_disk_on_termination": true,
          "location": "westeurope",
          "name": "vmiscsisrv01",
          "os_profile": [
            {
              "admin_password": "",
              "admin_username": "cloudadmin",
              "computer_name": "vmiscsisrv"
            }
          ],
          "os_profile_linux_config": [
            {
              "disable_password_authentication": true,
              "ssh_keys": [
                {
                  "path": "/home/cloudadmin/.ssh/authorized_keys"
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "primary_network_interface_id": null,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "storage_data_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "Empty",
              "disk_size_gb": 10,
              "lun": 0,
              "managed_disk_type": "StandardSSD_LRS",
              "name": "disk-iscsisrv01-Data01",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "storage_image_reference": [
            {
              "id": "",
              "offer": "sles-sap-15-sp2",
              "publisher": "SUSE",
              "sku": "gen2",
              "version": "latest"
            }
          ],
          "storage_os_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "FromImage",
              "image_uri": null,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-iscsisrv01-Os",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "vm_size": "Standard_D2s_v3",
          "zones": null
        },
        "after_unknown": {
          "additional_capabilities": [

          ],
          "availability_set_id": true,
          "boot_diagnostics": [
            {
              "storage_uri": true
            }
          ],
          "id": true,
          "identity": true,
          "license_type": true,
          "network_interface_ids": true,
          "os_profile": [
            {
              "custom_data": true
            }
          ],
          "os_profile_linux_config": [
            {
              "ssh_keys": [
                {
                  "key_data": true
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "storage_data_disk": [
            {
              "managed_disk_id": true
            }
          ],
          "storage_image_reference": [
            {
            }
          ],
          "storage_os_disk": [
            {
              "disk_size_gb": true,
              "managed_disk_id": true,
              "os_type": true
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.data.azurerm_network_interface.iscsisrv[0]",
      "module_address": "module.bluehorizon.module.iscsi_server",
      "mode": "data",
      "type": "azurerm_network_interface",
      "name": "iscsisrv",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "name": "nic-iscsisrv01",
          "resource_group_name": "rg-ha-sap-test"
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "enable_accelerated_networking": true,
          "enable_ip_forwarding": true,
          "id": true,
          "internal_dns_name_label": true,
          "ip_configuration": true,
          "location": true,
          "mac_address": true,
          "network_security_group_id": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": true,
          "timeouts": true,
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.module.iscsi_on_destroy.null_resource.on_destroy[0]",
      "module_address": "module.bluehorizon.module.iscsi_server.module.iscsi_on_destroy",
      "mode": "managed",
      "type": "null_resource",
      "name": "on_destroy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.module.iscsi_provision.null_resource.provision[0]",
      "module_address": "module.bluehorizon.module.iscsi_server.module.iscsi_provision",
      "mode": "managed",
      "type": "null_resource",
      "name": "provision",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.iscsi_server.null_resource.iscsi_provisioner[0]",
      "module_address": "module.bluehorizon.module.iscsi_server",
      "mode": "managed",
      "type": "null_resource",
      "name": "iscsi_provisioner",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.local_execution.null_resource.pre_execution[0]",
      "module_address": "module.bluehorizon.module.local_execution",
      "mode": "managed",
      "type": "null_resource",
      "name": "pre_execution",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "triggers": null
        },
        "after_unknown": {
          "id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.azurerm_network_interface.monitoring[0]",
      "module_address": "module.bluehorizon.module.monitoring",
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "monitoring",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enable_accelerated_networking": false,
          "enable_ip_forwarding": false,
          "ip_configuration": [
            {
              "name": "ipconf-primary",
              "private_ip_address": "10.74.1.5",
              "private_ip_address_allocation": "static",
              "private_ip_address_version": "IPv4",
              "public_ip_address_id": null
            }
          ],
          "location": "westeurope",
          "name": "nic-monitoring",
          "resource_group_name": "rg-ha-sap-test",
          "tags": {
            "workspace": "test"
          },
          "timeouts": null
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "id": true,
          "internal_dns_name_label": true,
          "internal_domain_name_suffix": true,
          "ip_configuration": [
            {
              "primary": true,
              "subnet_id": true
            }
          ],
          "mac_address": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": {
          },
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.azurerm_virtual_machine.monitoring[0]",
      "module_address": "module.bluehorizon.module.monitoring",
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "monitoring",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "additional_capabilities": [

          ],
          "boot_diagnostics": [
            {
              "enabled": true
            }
          ],
          "delete_data_disks_on_termination": true,
          "delete_os_disk_on_termination": true,
          "location": "westeurope",
          "name": "vmmonitoring",
          "os_profile": [
            {
              "admin_password": "",
              "admin_username": "cloudadmin",
              "computer_name": "vmmonitoring"
            }
          ],
          "os_profile_linux_config": [
            {
              "disable_password_authentication": true,
              "ssh_keys": [
                {
                  "path": "/home/cloudadmin/.ssh/authorized_keys"
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "primary_network_interface_id": null,
          "proximity_placement_group_id": null,
          "resource_group_name": "rg-ha-sap-test",
          "storage_data_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "Empty",
              "disk_size_gb": 10,
              "lun": 0,
              "managed_disk_type": "Standard_LRS",
              "name": "disk-monitoring-Data01",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "storage_image_reference": [
            {
              "id": "",
              "offer": "sles-sap-15-sp2",
              "publisher": "SUSE",
              "sku": "gen2",
              "version": "latest"
            }
          ],
          "storage_os_disk": [
            {
              "caching": "ReadWrite",
              "create_option": "FromImage",
              "image_uri": null,
              "managed_disk_type": "Premium_LRS",
              "name": "disk-monitoring-Os",
              "vhd_uri": null,
              "write_accelerator_enabled": false
            }
          ],
          "tags": {
            "workspace": "test"
          },
          "timeouts": null,
          "vm_size": "Standard_D2s_v3",
          "zones": null
        },
        "after_unknown": {
          "additional_capabilities": [

          ],
          "availability_set_id": true,
          "boot_diagnostics": [
            {
              "storage_uri": true
            }
          ],
          "id": true,
          "identity": true,
          "license_type": true,
          "network_interface_ids": true,
          "os_profile": [
            {
              "custom_data": true
            }
          ],
          "os_profile_linux_config": [
            {
              "ssh_keys": [
                {
                  "key_data": true
                }
              ]
            }
          ],
          "os_profile_secrets": [

          ],
          "os_profile_windows_config": [

          ],
          "plan": [

          ],
          "storage_data_disk": [
            {
              "managed_disk_id": true
            }
          ],
          "storage_image_reference": [
            {
            }
          ],
          "storage_os_disk": [
            {
              "disk_size_gb": true,
              "managed_disk_id": true,
              "os_type": true
            }
          ],
          "tags": {
          }
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.data.azurerm_network_interface.monitoring[0]",
      "module_address": "module.bluehorizon.module.monitoring",
      "mode": "data",
      "type": "azurerm_network_interface",
      "name": "monitoring",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "name": "nic-monitoring",
          "resource_group_name": "rg-ha-sap-test"
        },
        "after_unknown": {
          "applied_dns_servers": true,
          "dns_servers": true,
          "enable_accelerated_networking": true,
          "enable_ip_forwarding": true,
          "id": true,
          "internal_dns_name_label": true,
          "ip_configuration": true,
          "location": true,
          "mac_address": true,
          "network_security_group_id": true,
          "private_ip_address": true,
          "private_ip_addresses": true,
          "tags": true,
          "timeouts": true,
          "virtual_machine_id": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.module.monitoring_on_destroy.null_resource.on_destroy[0]",
      "module_address": "module.bluehorizon.module.monitoring.module.monitoring_on_destroy",
      "mode": "managed",
      "type": "null_resource",
      "name": "on_destroy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.module.monitoring_provision.null_resource.provision[0]",
      "module_address": "module.bluehorizon.module.monitoring.module.monitoring_provision",
      "mode": "managed",
      "type": "null_resource",
      "name": "provision",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "module.bluehorizon.module.monitoring.null_resource.monitoring_provisioner[0]",
      "module_address": "module.bluehorizon.module.monitoring",
      "mode": "managed",
      "type": "null_resource",
      "name": "monitoring_provisioner",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
        },
        "after_unknown": {
          "id": true,
          "triggers": true
        }
      }
    },
    {
      "address": "tls_private_key.salt_execution_ssh_keys",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "salt_execution_ssh_keys",
      "provider_name": "registry.terraform.io/hashicorp/tls",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "algorithm": "RSA",
          "ecdsa_curve": "P224",
          "rsa_bits": 2048
        },
        "after_unknown": {
          "id": true,
          "private_key_pem": true,
          "public_key_fingerprint_md5": true,
          "public_key_openssh": true,
          "public_key_pem": true
        }
      }
    }
  ],
  "output_changes": {
    "admin_user": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "cloudadmin",
      "after_unknown": false
    },
    "bastion_ip": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true
    },
    "hana_ips": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true
    },
    "monitoring_server": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "http://:3000",
      "after_unknown": false
    },
    "resource_group_url": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "https://portal.azure.com/#@SUSERDBillingsuse.onmicrosoft.com/resource/subscriptions/c011786b-59d7-4817-880c-7cd8a6ca4b19/resourceGroups/rg-ha-sap-test/overview",
      "after_unknown": false
    }
  },
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "0.13.4",
    "values": {
      "outputs": {
        "admin_user": {
          "sensitive": false,
          "value": "cloudadmin"
        },
        "resource_group_url": {
          "sensitive": false,
          "value": "https://portal.azure.com/#@SUSERDBillingsuse.onmicrosoft.com/resource/subscriptions/c011786b-59d7-4817-880c-7cd8a6ca4b19/resourceGroups/rg-ha-sap-test/overview"
        }
      },
      "root_module": {
        "resources": [
          {
            "address": "data.azurerm_subscription.current",
            "mode": "data",
            "type": "azurerm_subscription",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/azurerm",
            "schema_version": 0,
            "values": {
              "display_name": "SUSE R&D General",
              "id": "/subscriptions/c011786b-59d7-4817-880c-7cd8a6ca4b19",
              "location_placement_id": "Public_2014-09-01",
              "quota_id": "PayAsYouGo_2014-09-01",
              "spending_limit": "Off",
              "state": "Enabled",
              "subscription_id": "c011786b-59d7-4817-880c-7cd8a6ca4b19",
              "tenant_id": "a887795a-b916-4e1a-a350-78949c09bdb3",
              "timeouts": null
            }
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.bluehorizon.data.azurerm_subscription.current",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "display_name": "SUSE R&D General",
                  "id": "/subscriptions/c011786b-59d7-4817-880c-7cd8a6ca4b19",
                  "location_placement_id": "Public_2014-09-01",
                  "quota_id": "PayAsYouGo_2014-09-01",
                  "spending_limit": "Off",
                  "state": "Enabled",
                  "subscription_id": "c011786b-59d7-4817-880c-7cd8a6ca4b19",
                  "tenant_id": "a887795a-b916-4e1a-a350-78949c09bdb3",
                  "timeouts": null
                }
              }
            ],
            "address": "module.bluehorizon"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "azurerm": {
        "name": "azurerm",
        "version_constraint": "~> 2.32.0",
        "expressions": {
          "features": [
            {
            }
          ]
        }
      },
      "module.bluehorizon:azurerm": {
        "name": "azurerm",
        "version_constraint": "~> 2.32.0",
        "module_address": "module.bluehorizon",
        "expressions": {
          "features": [
            {
            }
          ]
        }
      }
    },
    "root_module": {
      "outputs": {
        "admin_user": {
          "expression": {
            "references": [
              "var.os_admnistrator_name"
            ]
          }
        },
        "bastion_ip": {
          "expression": {
            "references": [
              "module.bluehorizon.bastion_public_ip"
            ]
          }
        },
        "hana_ips": {
          "expression": {
            "references": [
              "module.bluehorizon.cluster_nodes_ip"
            ]
          }
        },
        "monitoring_server": {
          "expression": {
            "references": [
              "module.bluehorizon.monitoring_public_ip"
            ]
          }
        },
        "resource_group_url": {
          "expression": {
            "references": [
              "data.azurerm_subscription.current",
              "var.deployment_name"
            ]
          }
        }
      },
      "resources": [
        {
          "address": "tls_private_key.salt_execution_ssh_keys",
          "mode": "managed",
          "type": "tls_private_key",
          "name": "salt_execution_ssh_keys",
          "provider_config_key": "tls",
          "expressions": {
            "algorithm": {
              "constant_value": "RSA"
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.azurerm_subscription.current",
          "mode": "data",
          "type": "azurerm_subscription",
          "name": "current",
          "provider_config_key": "azurerm",
          "schema_version": 0
        }
      ],
      "module_calls": {
        "bluehorizon": {
          "source": "git::https://github.com/SUSE/ha-sap-terraform-deployments.git///azure?ref=sap-blue-horizon",
          "expressions": {
            "admin_user": {
              "references": [
                "var.os_admnistrator_name"
              ]
            },
            "authorized_keys": {
              "references": [
                "var.ssh_authorized_key_file"
              ]
            },
            "az_region": {
              "references": [
                "var.azure_region"
              ]
            },
            "cluster_ssh_key": {
              "constant_value": "salt://sshkeys/cluster.id_rsa"
            },
            "cluster_ssh_pub": {
              "constant_value": "salt://sshkeys/cluster.id_rsa.pub"
            },
            "deployment_name": {
              "references": [
                "var.deployment_name"
              ]
            },
            "hana_archive_file": {
              "references": [
                "local.hana_archive_file"
              ]
            },
            "hana_cluster_fencing_mechanism": {
              "constant_value": "sbd"
            },
            "hana_count": {
              "references": [
                "var.hana_ha_enabled"
              ]
            },
            "hana_data_disks_configuration": {
              "references": [
                "local.hana_sizes",
                "var.instance_type"
              ]
            },
            "hana_enable_accelerated_networking": {
              "references": [
                "local.hana_sizes",
                "var.instance_type"
              ]
            },
            "hana_ha_enabled": {
              "references": [
                "var.hana_ha_enabled"
              ]
            },
            "hana_inst_master": {
              "references": [
                "local.storage_account_path",
                "local.hana_inst_master"
              ]
            },
            "hana_instance_number": {
              "references": [
                "var.instance_number"
              ]
            },
            "hana_master_password": {
              "references": [
                "var.sap_admin_password"
              ]
            },
            "hana_primary_site": {
              "references": [
                "var.deployment_name"
              ]
            },
            "hana_secondary_site": {
              "references": [
                "var.deployment_name"
              ]
            },
            "hana_sid": {
              "references": [
                "var.system_identifier"
              ]
            },
            "hana_vm_size": {
              "references": [
                "local.hana_sizes",
                "var.instance_type"
              ]
            },
            "monitoring_enabled": {
              "constant_value": true
            },
            "netweaver_master_password": {
              "constant_value": "not used"
            },
            "os_image": {
              "references": [
                "local.os_image"
              ]
            },
            "pre_deployment": {
              "constant_value": true
            },
            "private_key": {
              "references": [
                "tls_private_key.salt_execution_ssh_keys"
              ]
            },
            "provisioning_log_level": {
              "constant_value": "info"
            },
            "public_key": {
              "references": [
                "tls_private_key.salt_execution_ssh_keys"
              ]
            },
            "storage_account_key": {
              "references": [
                "var.storage_account_key"
              ]
            },
            "storage_account_name": {
              "references": [
                "var.storage_account_name"
              ]
            }
          },
          "module": {
            "outputs": {
              "bastion_public_ip": {
                "expression": {
                  "references": [
                    "module.bastion.public_ip"
                  ]
                }
              },
              "cluster_nodes_ip": {
                "expression": {
                  "references": [
                    "module.hana_node.cluster_nodes_ip"
                  ]
                }
              },
              "cluster_nodes_name": {
                "expression": {
                  "references": [
                    "module.hana_node.cluster_nodes_name"
                  ]
                }
              },
              "cluster_nodes_public_ip": {
                "expression": {
                  "references": [
                    "module.hana_node.cluster_nodes_public_ip"
                  ]
                }
              },
              "cluster_nodes_public_name": {
                "expression": {
                  "references": [
                    "module.hana_node.cluster_nodes_public_name"
                  ]
                }
              },
              "drbd_ip": {
                "expression": {
                  "references": [
                    "module.drbd_node.drbd_ip"
                  ]
                }
              },
              "drbd_name": {
                "expression": {
                  "references": [
                    "module.drbd_node.drbd_name"
                  ]
                }
              },
              "drbd_public_ip": {
                "expression": {
                  "references": [
                    "module.drbd_node.drbd_public_ip"
                  ]
                }
              },
              "drbd_public_name": {
                "expression": {
                  "references": [
                    "module.drbd_node.drbd_public_name"
                  ]
                }
              },
              "iscsi_srv_ip": {
                "expression": {
                  "references": [
                    "module.iscsi_server.iscsisrv_ip"
                  ]
                }
              },
              "iscsisrv_name": {
                "expression": {
                  "references": [
                    "module.iscsi_server.iscsisrv_name"
                  ]
                }
              },
              "iscsisrv_public_ip": {
                "expression": {
                  "references": [
                    "module.iscsi_server.iscsisrv_public_ip"
                  ]
                }
              },
              "iscsisrv_public_name": {
                "expression": {
                  "references": [
                    "module.iscsi_server.iscsisrv_public_name"
                  ]
                }
              },
              "monitoring_ip": {
                "expression": {
                  "references": [
                    "module.monitoring.monitoring_ip"
                  ]
                }
              },
              "monitoring_name": {
                "expression": {
                  "references": [
                    "module.monitoring.monitoring_name"
                  ]
                }
              },
              "monitoring_public_ip": {
                "expression": {
                  "references": [
                    "module.monitoring.monitoring_public_ip"
                  ]
                }
              },
              "monitoring_public_name": {
                "expression": {
                  "references": [
                    "module.monitoring.monitoring_public_name"
                  ]
                }
              },
              "netweaver_ip": {
                "expression": {
                  "references": [
                    "module.netweaver_node.netweaver_ip"
                  ]
                }
              },
              "netweaver_name": {
                "expression": {
                  "references": [
                    "module.netweaver_node.netweaver_name"
                  ]
                }
              },
              "netweaver_public_ip": {
                "expression": {
                  "references": [
                    "module.netweaver_node.netweaver_public_ip"
                  ]
                }
              },
              "netweaver_public_name": {
                "expression": {
                  "references": [
                    "module.netweaver_node.netweaver_public_name"
                  ]
                }
              }
            },
            "resources": [
              {
                "address": "azurerm_network_security_group.mysecgroup",
                "mode": "managed",
                "type": "azurerm_network_security_group",
                "name": "mysecgroup",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.deployment_name"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_resource_group.myrg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "myrg",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.resource_group_name"
                  ]
                }
              },
              {
                "address": "azurerm_route_table.myroutes",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "myroutes",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.deployment_name"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_storage_account.mytfstorageacc",
                "mode": "managed",
                "type": "azurerm_storage_account",
                "name": "mytfstorageacc",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "account_replication_type": {
                    "constant_value": "LRS"
                  },
                  "account_tier": {
                    "constant_value": "Standard"
                  },
                  "location": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.deployment_name"
                    ]
                  }
                },
                "schema_version": 2
              },
              {
                "address": "azurerm_subnet.mysubnet",
                "mode": "managed",
                "type": "azurerm_subnet",
                "name": "mysubnet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "address_prefixes": {
                    "references": [
                      "local.subnet_address_range"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_subnet_network_security_group_association.mysubnet",
                "mode": "managed",
                "type": "azurerm_subnet_network_security_group_association",
                "name": "mysubnet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "network_security_group_id": {
                    "references": [
                      "azurerm_network_security_group.mysecgroup"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_subnet_route_table_association.mysubnet",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "mysubnet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "azurerm_route_table.myroutes"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_virtual_network.mynet",
                "mode": "managed",
                "type": "azurerm_virtual_network",
                "name": "mynet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "address_space": {
                    "references": [
                      "local.vnet_address_range"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.deployment_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vnet_name"
                  ]
                }
              },
              {
                "address": "data.azurerm_subnet.mysubnet",
                "mode": "data",
                "type": "azurerm_subnet",
                "name": "mysubnet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.subnet_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.subnet_name",
                    "var.subnet_address_range"
                  ]
                }
              },
              {
                "address": "data.azurerm_subscription.current",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "current",
                "provider_config_key": "bluehorizon:azurerm",
                "schema_version": 0
              },
              {
                "address": "data.azurerm_virtual_network.mynet",
                "mode": "data",
                "type": "azurerm_virtual_network",
                "name": "mynet",
                "provider_config_key": "bluehorizon:azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.vnet_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vnet_name",
                    "var.vnet_address_range"
                  ]
                }
              }
            ],
            "module_calls": {
              "bastion": {
                "source": "./modules/bastion",
                "expressions": {
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.bastion_os_image"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "snet_address_range": {
                    "references": [
                      "local.vnet_address_range"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "vm_size": {
                    "constant_value": "Standard_B1s"
                  },
                  "vnet_name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.bastion"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_network_interface.bastion",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "local.private_ip_address"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "azurerm_public_ip.bastion[0]"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "azurerm_subnet.bastion[0]"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "nic-bastion"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_security_group.bastion",
                      "mode": "managed",
                      "type": "azurerm_network_security_group",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "nsg-bastion"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_security_rule.grafana",
                      "mode": "managed",
                      "type": "azurerm_network_security_rule",
                      "name": "grafana",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "access": {
                          "constant_value": "Allow"
                        },
                        "destination_address_prefix": {
                          "references": [
                            "local.private_ip_address"
                          ]
                        },
                        "destination_port_range": {
                          "constant_value": "3000"
                        },
                        "direction": {
                          "constant_value": "Inbound"
                        },
                        "name": {
                          "constant_value": "Grafana"
                        },
                        "network_security_group_name": {
                          "references": [
                            "azurerm_network_security_group.bastion"
                          ]
                        },
                        "priority": {
                          "constant_value": 110
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "source_address_prefix": {
                          "constant_value": "*"
                        },
                        "source_port_range": {
                          "constant_value": "*"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.bastion",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "pip-bastion"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_subnet.bastion",
                      "mode": "managed",
                      "type": "azurerm_subnet",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "address_prefixes": {
                          "references": [
                            "var.snet_address_range"
                          ]
                        },
                        "name": {
                          "constant_value": "snet-bastion"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "virtual_network_name": {
                          "references": [
                            "var.vnet_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_subnet_network_security_group_association.bastion",
                      "mode": "managed",
                      "type": "azurerm_subnet_network_security_group_association",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "network_security_group_id": {
                          "references": [
                            "azurerm_network_security_group.bastion[0]"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "azurerm_subnet.bastion[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.bastion",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "vmbastion"
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.bastion[0]"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "constant_value": "vmbastion"
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_image_reference": [
                          {
                            "offer": {
                              "references": [
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Standard_LRS"
                            },
                            "name": {
                              "constant_value": "disk-bastion-Os"
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "var.vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.bastion_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "bastion_provisioner",
                      "provider_config_key": "bastion:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.bastion"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.provision_enabled"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_public_ip.bastion",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "bastion",
                      "provider_config_key": "bastion:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.bastion[0]"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.bastion[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.bastion"
                      ]
                    }
                  ],
                  "module_calls": {
                    "bastion_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.bastion"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.bastion"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "local.bastion_enabled"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "data.azurerm_public_ip.bastion"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "bastion_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "bastion_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.bastion_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "local.provision_enabled"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "data.azurerm_public_ip.bastion"
                          ]
                        },
                        "reboot": {
                          "constant_value": false
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "bastion_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "bastion_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "az_region": {
                      "default": "westeurope",
                      "description": "Azure region where the deployment machines will be created"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "resource_group_name": {
                      "description": "Resource group name where the bastion will be created"
                    },
                    "snet_address_range": {
                      "description": "Subnet address range of the bastion subnet"
                    },
                    "storage_account": {
                      "description": "Storage account where the boot diagnostics will be stored"
                    },
                    "vm_size": {
                      "default": "Standard_B1s",
                      "description": "Bastion machine vm size"
                    },
                    "vnet_name": {
                      "description": "Virtual network where the bastion subnet will be created"
                    }
                  }
                }
              },
              "common_variables": {
                "source": "../generic_modules/common_variables",
                "expressions": {
                  "additional_packages": {
                    "references": [
                      "var.additional_packages"
                    ]
                  },
                  "authorized_keys": {
                    "references": [
                      "var.authorized_keys"
                    ]
                  },
                  "authorized_user": {
                    "references": [
                      "var.admin_user"
                    ]
                  },
                  "background": {
                    "references": [
                      "var.background"
                    ]
                  },
                  "bastion_enabled": {
                    "references": [
                      "var.bastion_enabled"
                    ]
                  },
                  "bastion_private_key": {
                    "references": [
                      "var.bastion_private_key"
                    ]
                  },
                  "bastion_public_key": {
                    "references": [
                      "var.bastion_public_key"
                    ]
                  },
                  "deployment_name": {
                    "references": [
                      "local.deployment_name"
                    ]
                  },
                  "ha_sap_deployment_repo": {
                    "references": [
                      "var.ha_sap_deployment_repo"
                    ]
                  },
                  "monitoring_enabled": {
                    "references": [
                      "var.monitoring_enabled"
                    ]
                  },
                  "monitoring_srv_ip": {
                    "references": [
                      "var.monitoring_enabled",
                      "local.monitoring_ip"
                    ]
                  },
                  "private_key": {
                    "references": [
                      "var.private_key"
                    ]
                  },
                  "provider_type": {
                    "constant_value": "azure"
                  },
                  "provisioner": {
                    "references": [
                      "var.provisioner"
                    ]
                  },
                  "provisioning_log_level": {
                    "references": [
                      "var.provisioning_log_level"
                    ]
                  },
                  "public_key": {
                    "references": [
                      "var.public_key"
                    ]
                  },
                  "qa_mode": {
                    "references": [
                      "var.qa_mode"
                    ]
                  },
                  "reg_additional_modules": {
                    "references": [
                      "var.reg_additional_modules"
                    ]
                  },
                  "reg_code": {
                    "references": [
                      "var.reg_code"
                    ]
                  },
                  "reg_email": {
                    "references": [
                      "var.reg_email"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "configuration": {
                      "expression": {
                        "references": [
                          "var.provider_type",
                          "var.deployment_name",
                          "var.reg_code",
                          "var.reg_email",
                          "var.reg_additional_modules",
                          "var.ha_sap_deployment_repo",
                          "var.additional_packages",
                          "local.public_key",
                          "local.private_key",
                          "var.authorized_keys",
                          "var.bastion_enabled",
                          "local.bastion_public_key",
                          "local.bastion_private_key",
                          "var.authorized_user",
                          "var.provisioner",
                          "var.provisioning_log_level",
                          "var.background",
                          "var.monitoring_enabled",
                          "var.monitoring_srv_ip",
                          "var.qa_mode",
                          "var.provider_type",
                          "var.reg_code",
                          "var.reg_email",
                          "var.reg_additional_modules",
                          "var.reg_additional_modules",
                          "var.ha_sap_deployment_repo",
                          "local.authorized_keys",
                          "var.authorized_user",
                          "var.additional_packages",
                          "var.monitoring_enabled",
                          "var.monitoring_srv_ip",
                          "var.qa_mode",
                          "var.provisioning_log_level"
                        ]
                      }
                    }
                  },
                  "variables": {
                    "additional_packages": {
                      "default": [

                      ],
                      "description": "extra packages which should be installed"
                    },
                    "authorized_keys": {
                      "default": [

                      ],
                      "description": "List of additional authorized SSH public keys content or path to already existing SSH public keys to access the created machines with the used admin user (admin_user variable in this case)"
                    },
                    "authorized_user": {
                      "description": "Authorized user for the given authorized_keys"
                    },
                    "background": {
                      "default": false,
                      "description": "Run the provisioner execution in background if set to true finishing terraform execution"
                    },
                    "bastion_enabled": {
                      "default": true,
                      "description": "Create a VM to work as a bastion to avoid the usage of public ip addresses and manage the ssh connection to the other machines"
                    },
                    "bastion_private_key": {
                      "default": "",
                      "description": "Path to a SSH private key used to connect to the bastion. If it's not set the key provided in private_key_location will be used"
                    },
                    "bastion_public_key": {
                      "default": "",
                      "description": "Path to a SSH public key used to connect to the bastion. If it's not set the key provided in public_key_location will be used"
                    },
                    "deployment_name": {
                      "default": "",
                      "description": "Suffix string added to some of the infrastructure resources names. If it is not provided, the terraform workspace string is used as suffix"
                    },
                    "ha_sap_deployment_repo": {
                      "default": "",
                      "description": "Repository url used to install development versions of HA/SAP deployment packages. If the SLE version is not present in the URL, it will be automatically detected"
                    },
                    "monitoring_enabled": {
                      "default": false,
                      "description": "Enable centralized monitoring via Prometheus/Grafana/Loki"
                    },
                    "monitoring_srv_ip": {
                      "default": "",
                      "description": "Monitoring server address"
                    },
                    "private_key": {
                      "default": "",
                      "description": "Content of a SSH private key or path to an already existing SSH private key. The key is only used to provision the machines. It is not uploaded to the machines in any case"
                    },
                    "provider_type": {
                      "description": "Used provider for the deployment"
                    },
                    "provisioner": {
                      "default": "salt",
                      "description": "Used provisioner option. Available options: salt. Let empty to not use any provisioner"
                    },
                    "provisioning_log_level": {
                      "default": "error",
                      "description": "Provisioning process log level. For salt: https://docs.saltstack.com/en/latest/ref/configuration/logging/index.html"
                    },
                    "public_key": {
                      "default": "",
                      "description": "Content of a SSH public key or path to an already existing SSH public key. The key is only used to provision the machines and it is authorized for future accesses"
                    },
                    "qa_mode": {
                      "default": false,
                      "description": "Enable test/qa mode (disable extra packages usage not coming in the image)"
                    },
                    "reg_additional_modules": {
                      "default": {
                      },
                      "description": "Map of the modules to be registered. Module name = Regcode, when needed."
                    },
                    "reg_code": {
                      "default": "",
                      "description": "If informed, register the product using SUSEConnect"
                    },
                    "reg_email": {
                      "default": "",
                      "description": "Email used for the registration"
                    }
                  }
                }
              },
              "drbd_node": {
                "source": "./modules/drbd_node",
                "expressions": {
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "bastion_host": {
                    "references": [
                      "module.bastion.public_ip"
                    ]
                  },
                  "cluster_ssh_key": {
                    "references": [
                      "var.cluster_ssh_key"
                    ]
                  },
                  "cluster_ssh_pub": {
                    "references": [
                      "var.cluster_ssh_pub"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "drbd_cluster_vip": {
                    "references": [
                      "local.drbd_cluster_vip"
                    ]
                  },
                  "drbd_count": {
                    "references": [
                      "var.drbd_enabled"
                    ]
                  },
                  "drbd_image_uri": {
                    "references": [
                      "var.drbd_image_uri"
                    ]
                  },
                  "fencing_mechanism": {
                    "references": [
                      "var.drbd_cluster_fencing_mechanism"
                    ]
                  },
                  "host_ips": {
                    "references": [
                      "local.drbd_ips"
                    ]
                  },
                  "iscsi_srv_ip": {
                    "references": [
                      "module.iscsi_server.iscsisrv_ip"
                    ]
                  },
                  "network_subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  },
                  "nfs_export_name": {
                    "references": [
                      "var.netweaver_sid"
                    ]
                  },
                  "nfs_mounting_point": {
                    "references": [
                      "var.drbd_nfs_mounting_point"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.drbd_os_image"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "sbd_storage_type": {
                    "references": [
                      "var.sbd_storage_type"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "vm_size": {
                    "references": [
                      "var.drbd_vm_size"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "drbd_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_network_interface.drbd"
                        ]
                      }
                    },
                    "drbd_name": {
                      "expression": {
                        "references": [
                          "azurerm_virtual_machine.drbd"
                        ]
                      }
                    },
                    "drbd_public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.drbd"
                        ]
                      }
                    },
                    "drbd_public_name": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.drbd"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_availability_set.drbd-availability-set",
                      "mode": "managed",
                      "type": "azurerm_availability_set",
                      "name": "drbd-availability-set",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "managed": {
                          "constant_value": "true"
                        },
                        "name": {
                          "constant_value": "avset-drbd"
                        },
                        "platform_fault_domain_count": {
                          "constant_value": 2
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_image.drbd-image",
                      "mode": "managed",
                      "type": "azurerm_image",
                      "name": "drbd-image",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "drbd-image"
                        },
                        "os_disk": [
                          {
                            "blob_uri": {
                              "references": [
                                "var.drbd_image_uri"
                              ]
                            },
                            "os_state": {
                              "constant_value": "Generalized"
                            },
                            "os_type": {
                              "constant_value": "Linux"
                            },
                            "size_gb": {
                              "constant_value": "32"
                            }
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_image_uri"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb.drbd-load-balancer",
                      "mode": "managed",
                      "type": "azurerm_lb",
                      "name": "drbd-load-balancer",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "frontend_ip_configuration": [
                          {
                            "name": {
                              "constant_value": "lbfe-drbd"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.drbd_cluster_vip"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "lb-drbd"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_backend_address_pool.drbd-backend-pool",
                      "mode": "managed",
                      "type": "azurerm_lb_backend_address_pool",
                      "name": "drbd-backend-pool",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.drbd-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbbe-drbd"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_probe.drbd-health-probe",
                      "mode": "managed",
                      "type": "azurerm_lb_probe",
                      "name": "drbd-health-probe",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "interval_in_seconds": {
                          "constant_value": 5
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.drbd-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbhp-drbd"
                        },
                        "number_of_probes": {
                          "constant_value": 2
                        },
                        "port": {
                          "constant_value": 61000
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.drbd-lb-tcp-2049",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "drbd-lb-tcp-2049",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.drbd-backend-pool",
                            "count.index"
                          ]
                        },
                        "backend_port": {
                          "constant_value": 2049
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-drbd"
                        },
                        "frontend_port": {
                          "constant_value": 2049
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.drbd-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbrule-drbd-tcp-2049"
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.drbd-health-probe",
                            "count.index"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.drbd-lb-udp-2049",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "drbd-lb-udp-2049",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.drbd-backend-pool",
                            "count.index"
                          ]
                        },
                        "backend_port": {
                          "constant_value": 2049
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-drbd"
                        },
                        "frontend_port": {
                          "constant_value": 2049
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.drbd-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbrule-drbd-udp-2049"
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.drbd-health-probe",
                            "count.index"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Udp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface.drbd",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "drbd",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.host_ips",
                                "count.index"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "local.bastion_enabled",
                                "azurerm_public_ip.drbd",
                                "count.index"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface_backend_address_pool_association.drbd-nodes",
                      "mode": "managed",
                      "type": "azurerm_network_interface_backend_address_pool_association",
                      "name": "drbd-nodes",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.drbd-backend-pool[0]"
                          ]
                        },
                        "ip_configuration_name": {
                          "constant_value": "ipconf-primary"
                        },
                        "network_interface_id": {
                          "references": [
                            "azurerm_network_interface.drbd",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.drbd",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "drbd",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.drbd",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "drbd",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "availability_set_id": {
                          "references": [
                            "azurerm_availability_set.drbd-availability-set[0]"
                          ]
                        },
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name",
                            "count.index"
                          ]
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.drbd",
                            "count.index"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "references": [
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_data_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "Empty"
                            },
                            "disk_size_gb": {
                              "constant_value": "10"
                            },
                            "lun": {
                              "constant_value": "0"
                            },
                            "managed_disk_type": {
                              "constant_value": "Standard_LRS"
                            },
                            "name": {
                              "references": [
                                "var.name",
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "storage_image_reference": [
                          {
                            "id": {
                              "references": [
                                "var.drbd_image_uri",
                                "azurerm_image.drbd-image"
                              ]
                            },
                            "offer": {
                              "references": [
                                "var.drbd_image_uri",
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "var.drbd_image_uri",
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "var.drbd_image_uri",
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "var.drbd_image_uri",
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Premium_LRS"
                            },
                            "name": {
                              "references": [
                                "var.name",
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "var.vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.drbd_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "drbd_provisioner",
                      "provider_config_key": "drbd_node:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables",
                                "var.name",
                                "var.name",
                                "count.index",
                                "var.network_domain",
                                "var.host_ips",
                                "var.host_ips",
                                "count.index",
                                "var.cluster_ssh_pub",
                                "var.cluster_ssh_key",
                                "var.drbd_cluster_vip",
                                "var.fencing_mechanism",
                                "var.sbd_storage_type",
                                "var.iscsi_srv_ip",
                                "var.nfs_mounting_point",
                                "var.nfs_export_name"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.drbd"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "var.drbd_count"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_network_interface.drbd",
                      "mode": "data",
                      "type": "azurerm_network_interface",
                      "name": "drbd",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_network_interface.drbd",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.drbd",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.drbd_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.drbd"
                      ]
                    },
                    {
                      "address": "data.azurerm_public_ip.drbd",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "drbd",
                      "provider_config_key": "drbd_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.drbd",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.drbd",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.drbd_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.drbd"
                      ]
                    }
                  ],
                  "module_calls": {
                    "drbd_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.drbd"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.drbd"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.drbd_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "drbd_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "drbd_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.drbd_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.common_variables",
                            "var.drbd_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "drbd_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "drbd_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "az_region": {
                      "default": "westeurope"
                    },
                    "bastion_host": {
                      "default": "",
                      "description": "Bastion host address"
                    },
                    "cluster_ssh_key": {
                      "description": "path for the private key needed by the cluster"
                    },
                    "cluster_ssh_pub": {
                      "description": "path for the public key needed by the cluster"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "drbd_cluster_vip": {
                      "description": "Virtual ip for the drbd cluster"
                    },
                    "drbd_count": {
                      "default": "2"
                    },
                    "drbd_image_uri": {
                      "default": ""
                    },
                    "fencing_mechanism": {
                      "description": "Choose the fencing mechanism for the cluster. Options: sbd"
                    },
                    "host_ips": {
                      "default": [
                        "10.74.1.20",
                        "10.74.1.21"
                      ],
                      "description": "ip addresses to set to the nodes"
                    },
                    "iscsi_srv_ip": {
                      "description": "iscsi server address"
                    },
                    "name": {
                      "default": "drbd",
                      "description": "hostname, without the domain part"
                    },
                    "network_domain": {
                      "default": "tf.local"
                    },
                    "network_subnet_id": {
                    },
                    "nfs_export_name": {
                      "description": "Name of the created export in the NFS service. Usually, the `sid` of the SAP instances is used"
                    },
                    "nfs_mounting_point": {
                      "description": "Mounting point of the NFS share created in to of DRBD (`/mnt` must not be used in Azure)"
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "resource_group_name": {
                    },
                    "sbd_storage_type": {
                      "default": "iscsi",
                      "description": "Choose the SBD storage type. Options: iscsi"
                    },
                    "storage_account": {
                    },
                    "vm_size": {
                      "default": "Standard_D2s_v3"
                    }
                  }
                }
              },
              "hana_node": {
                "source": "./modules/hana_node",
                "expressions": {
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "bastion_host": {
                    "references": [
                      "module.bastion.public_ip"
                    ]
                  },
                  "cluster_ssh_key": {
                    "references": [
                      "var.cluster_ssh_key"
                    ]
                  },
                  "cluster_ssh_pub": {
                    "references": [
                      "var.cluster_ssh_pub"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "enable_accelerated_networking": {
                    "references": [
                      "var.hana_enable_accelerated_networking"
                    ]
                  },
                  "fencing_mechanism": {
                    "references": [
                      "var.hana_cluster_fencing_mechanism"
                    ]
                  },
                  "ha_enabled": {
                    "references": [
                      "var.hana_ha_enabled"
                    ]
                  },
                  "hana_archive_file": {
                    "references": [
                      "var.hana_archive_file"
                    ]
                  },
                  "hana_cluster_vip": {
                    "references": [
                      "local.hana_cluster_vip"
                    ]
                  },
                  "hana_cluster_vip_secondary": {
                    "references": [
                      "var.hana_active_active",
                      "local.hana_cluster_vip_secondary"
                    ]
                  },
                  "hana_cost_optimized_instance_number": {
                    "references": [
                      "var.hana_cost_optimized_instance_number"
                    ]
                  },
                  "hana_cost_optimized_master_password": {
                    "references": [
                      "var.hana_cost_optimized_master_password",
                      "var.hana_master_password",
                      "var.hana_cost_optimized_master_password"
                    ]
                  },
                  "hana_cost_optimized_sid": {
                    "references": [
                      "var.hana_cost_optimized_sid"
                    ]
                  },
                  "hana_count": {
                    "references": [
                      "var.hana_count"
                    ]
                  },
                  "hana_data_disks_configuration": {
                    "references": [
                      "var.hana_data_disks_configuration"
                    ]
                  },
                  "hana_extract_dir": {
                    "references": [
                      "var.hana_extract_dir"
                    ]
                  },
                  "hana_fstype": {
                    "references": [
                      "var.hana_fstype"
                    ]
                  },
                  "hana_inst_folder": {
                    "references": [
                      "var.hana_inst_folder"
                    ]
                  },
                  "hana_inst_master": {
                    "references": [
                      "var.hana_inst_master"
                    ]
                  },
                  "hana_instance_number": {
                    "references": [
                      "var.hana_instance_number"
                    ]
                  },
                  "hana_master_password": {
                    "references": [
                      "var.hana_master_password"
                    ]
                  },
                  "hana_platform_folder": {
                    "references": [
                      "var.hana_platform_folder"
                    ]
                  },
                  "hana_primary_site": {
                    "references": [
                      "var.hana_primary_site"
                    ]
                  },
                  "hana_sapcar_exe": {
                    "references": [
                      "var.hana_sapcar_exe"
                    ]
                  },
                  "hana_secondary_site": {
                    "references": [
                      "var.hana_secondary_site"
                    ]
                  },
                  "hana_sid": {
                    "references": [
                      "var.hana_sid"
                    ]
                  },
                  "host_ips": {
                    "references": [
                      "local.hana_ips"
                    ]
                  },
                  "hwcct": {
                    "references": [
                      "var.hwcct"
                    ]
                  },
                  "iscsi_srv_ip": {
                    "references": [
                      "module.iscsi_server.iscsisrv_ip"
                    ]
                  },
                  "network_subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.hana_os_image"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "sbd_storage_type": {
                    "references": [
                      "var.sbd_storage_type"
                    ]
                  },
                  "scenario_type": {
                    "references": [
                      "var.scenario_type"
                    ]
                  },
                  "sles4sap_uri": {
                    "references": [
                      "var.sles4sap_uri"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "storage_account_key": {
                    "references": [
                      "var.storage_account_key"
                    ]
                  },
                  "storage_account_name": {
                    "references": [
                      "var.storage_account_name"
                    ]
                  },
                  "vm_size": {
                    "references": [
                      "var.hana_vm_size"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "cluster_nodes_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_network_interface.hana"
                        ]
                      }
                    },
                    "cluster_nodes_name": {
                      "expression": {
                        "references": [
                          "azurerm_virtual_machine.hana"
                        ]
                      }
                    },
                    "cluster_nodes_public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.hana"
                        ]
                      }
                    },
                    "cluster_nodes_public_name": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.hana"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_availability_set.hana-availability-set",
                      "mode": "managed",
                      "type": "azurerm_availability_set",
                      "name": "hana-availability-set",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "managed": {
                          "constant_value": "true"
                        },
                        "name": {
                          "constant_value": "avset-hana"
                        },
                        "platform_fault_domain_count": {
                          "constant_value": 2
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_image.sles4sap",
                      "mode": "managed",
                      "type": "azurerm_image",
                      "name": "sles4sap",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "BVSles4SapImg"
                        },
                        "os_disk": [
                          {
                            "blob_uri": {
                              "references": [
                                "var.sles4sap_uri"
                              ]
                            },
                            "os_state": {
                              "constant_value": "Generalized"
                            },
                            "os_type": {
                              "constant_value": "Linux"
                            },
                            "size_gb": {
                              "constant_value": "32"
                            }
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.sles4sap_uri"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb.hana-load-balancer",
                      "mode": "managed",
                      "type": "azurerm_lb",
                      "name": "hana-load-balancer",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "frontend_ip_configuration": [
                          {
                            "name": {
                              "constant_value": "lbfe-hana"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.hana_cluster_vip"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "lb-hana"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_backend_address_pool.hana-load-balancer",
                      "mode": "managed",
                      "type": "azurerm_lb_backend_address_pool",
                      "name": "hana-load-balancer",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbbe-hana"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_probe.hana-load-balancer",
                      "mode": "managed",
                      "type": "azurerm_lb_probe",
                      "name": "hana-load-balancer",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "interval_in_seconds": {
                          "constant_value": 5
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbhp-hana"
                        },
                        "number_of_probes": {
                          "constant_value": 2
                        },
                        "port": {
                          "references": [
                            "var.hana_instance_number"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_probe.hana-load-balancer-secondary",
                      "mode": "managed",
                      "type": "azurerm_lb_probe",
                      "name": "hana-load-balancer-secondary",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "interval_in_seconds": {
                          "constant_value": 5
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbhp-hana-secondary"
                        },
                        "number_of_probes": {
                          "constant_value": 2
                        },
                        "port": {
                          "references": [
                            "var.hana_instance_number"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_actitve_active_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.hana-lb-rules",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "hana-lb-rules",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.hana-load-balancer[0]"
                          ]
                        },
                        "backend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-hana"
                        },
                        "frontend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.hana-load-balancer[0]"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.hana_lb_rules_ports"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.hana-lb-rules-secondary",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "hana-lb-rules-secondary",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.hana-load-balancer[0]"
                          ]
                        },
                        "backend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-hana-secondary"
                        },
                        "frontend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.hana-load-balancer-secondary[0]"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.hana_lb_rules_ports_secondary"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.hanadb_exporter",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "hanadb_exporter",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.hana-load-balancer[0]"
                          ]
                        },
                        "backend_port": {
                          "constant_value": 9668
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-hana"
                        },
                        "frontend_port": {
                          "constant_value": 9668
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.hana-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "hanadb_exporter"
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.hana-load-balancer[0]"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface.hana",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "enable_accelerated_networking": {
                          "references": [
                            "var.enable_accelerated_networking"
                          ]
                        },
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.host_ips",
                                "count.index"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "local.bastion_enabled",
                                "azurerm_public_ip.hana",
                                "count.index"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.hana_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface_backend_address_pool_association.hana",
                      "mode": "managed",
                      "type": "azurerm_network_interface_backend_address_pool_association",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.hana-load-balancer[0]"
                          ]
                        },
                        "ip_configuration_name": {
                          "constant_value": "ipconf-primary"
                        },
                        "network_interface_id": {
                          "references": [
                            "azurerm_network_interface.hana",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.ha_enabled",
                          "var.hana_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.hana",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.hana_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.hana",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "availability_set_id": {
                          "references": [
                            "var.ha_enabled",
                            "azurerm_availability_set.hana-availability-set[0]"
                          ]
                        },
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name",
                            "count.index"
                          ]
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.hana",
                            "count.index"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "references": [
                                "var.name",
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_image_reference": [
                          {
                            "id": {
                              "references": [
                                "var.sles4sap_uri",
                                "azurerm_image.sles4sap"
                              ]
                            },
                            "offer": {
                              "references": [
                                "var.sles4sap_uri",
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "var.sles4sap_uri",
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "var.sles4sap_uri",
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "var.sles4sap_uri",
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Premium_LRS"
                            },
                            "name": {
                              "references": [
                                "var.name",
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "var.vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.hana_count"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.hana_node_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "hana_node_provisioner",
                      "provider_config_key": "hana_node:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables",
                                "var.scenario_type",
                                "var.name",
                                "var.name",
                                "count.index",
                                "var.host_ips",
                                "var.hana_inst_master",
                                "var.hana_inst_folder",
                                "var.hana_platform_folder",
                                "var.hana_sapcar_exe",
                                "var.hana_archive_file",
                                "var.hana_extract_dir",
                                "var.hana_fstype",
                                "var.hana_data_disks_configuration",
                                "var.hana_data_disks_configuration",
                                "var.storage_account_name",
                                "var.storage_account_key",
                                "var.ha_enabled",
                                "var.fencing_mechanism",
                                "var.sbd_storage_type",
                                "var.iscsi_srv_ip",
                                "var.hana_sid",
                                "var.hana_instance_number",
                                "var.hana_cost_optimized_sid",
                                "var.hana_cost_optimized_instance_number",
                                "var.hana_master_password",
                                "var.hana_cost_optimized_master_password",
                                "var.hana_primary_site",
                                "var.hana_secondary_site",
                                "var.ha_enabled",
                                "azurerm_lb.hana-load-balancer[0]",
                                "var.hana_cluster_vip_secondary",
                                "var.cluster_ssh_pub",
                                "var.cluster_ssh_key",
                                "var.hwcct"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.hana"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "var.hana_count"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_network_interface.hana",
                      "mode": "data",
                      "type": "azurerm_network_interface",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_network_interface.hana",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.hana",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.hana_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.hana"
                      ]
                    },
                    {
                      "address": "data.azurerm_public_ip.hana",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "hana",
                      "provider_config_key": "hana_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.hana",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.hana",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.hana_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.hana"
                      ]
                    }
                  ],
                  "module_calls": {
                    "hana_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.hana"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.hana"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.hana_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "hana_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "hana_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.hana_node_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.common_variables",
                            "var.hana_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "hana_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "hana_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "az_region": {
                      "default": "westeurope"
                    },
                    "bastion_host": {
                      "default": "",
                      "description": "Bastion host address"
                    },
                    "cluster_ssh_key": {
                      "description": "path for the private key needed by the cluster"
                    },
                    "cluster_ssh_pub": {
                      "description": "path for the public key needed by the cluster"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "enable_accelerated_networking": {
                    },
                    "fencing_mechanism": {
                      "description": "Choose the fencing mechanism for the cluster. Options: sbd"
                    },
                    "ha_enabled": {
                      "default": true,
                      "description": "Enable HA cluster in top of HANA system replication"
                    },
                    "hana_archive_file": {
                      "default": "",
                      "description": "Path to the HANA database server installation SAR archive or HANA platform archive file in zip or rar format, relative to the 'hana_inst_master' mounting point. Use this parameter if the hana media archive is not already extracted"
                    },
                    "hana_cluster_vip": {
                      "description": "Virtual ip for the hana cluster"
                    },
                    "hana_cluster_vip_secondary": {
                      "default": "",
                      "description": "IP address used to configure the hana cluster floating IP for the secondary node in an Active/Active mode"
                    },
                    "hana_cost_optimized_instance_number": {
                      "description": "Instance number of the HANA cost-optimized system. It must be a 2 digits string. Examples: 00, 01, 10"
                    },
                    "hana_cost_optimized_master_password": {
                      "description": "Master password for the HANA system (sidadm user included)"
                    },
                    "hana_cost_optimized_sid": {
                      "description": "System identifier of the HANA cost-optimized system. It must be a 3 characters string (check the restrictions in the SAP documentation pages). Examples: prd, ha1"
                    },
                    "hana_count": {
                      "default": "2"
                    },
                    "hana_data_disks_configuration": {
                      "default": {
                        "caching": "None,None,None,None,None,None,None",
                        "disks_size": "128,128,128,128,128,128,128",
                        "disks_type": "Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS",
                        "luns": "0,1#2,3#4#5#6",
                        "lv_sizes": "100#100#100#100#100",
                        "names": "data#log#shared#usrsap#backup",
                        "paths": "/hana/data#/hana/log#/hana/shared#/usr/sap#/hana/backup",
                        "writeaccelerator": "false,false,false,false,false,false,false"
                      },
                      "description": "    This map describes how the disks will be formatted to create the definitive configuration during the provisioning.\n    disks_type, disks_size, caching and writeaccelerator are used during the disks creation. The number of elements must match in all of them\n    \"#\" character is used to split the volume groups, while \",\" is used to define the logical volumes for each group\n    The number of groups splitted by \"#\" must match in all of the entries\n    names -> The names of the volume groups (example datalog#shared#usrsap#backup)\n    luns  -> The luns or disks used for each volume group. The number of luns must match with the configured in the previous disks variables (example 0,1,2#3#4#5)\n    sizes -> The size dedicated for each logical volume and folder (example 70,100#100#100#100)\n    paths -> Folder where each volume group will be mounted (example /hana/data,/hana/log#/hana/shared#/usr/sap#/hana/backup)\n"
                    },
                    "hana_extract_dir": {
                      "default": "/sapmedia_extract/HANA",
                      "description": "Absolute path to folder where SAP HANA archive will be extracted"
                    },
                    "hana_fstype": {
                      "default": "xfs",
                      "description": "Filesystem type to use for HANA"
                    },
                    "hana_inst_folder": {
                      "default": "/sapmedia/HANA"
                    },
                    "hana_inst_master": {
                    },
                    "hana_instance_number": {
                      "description": "Instance number of the HANA system. It must be a 2 digits string. Examples: 00, 01, 10"
                    },
                    "hana_master_password": {
                      "description": "Master password for the HANA system (sidadm user included)"
                    },
                    "hana_platform_folder": {
                      "default": "",
                      "description": "Path to the hana platform media, relative to the 'hana_inst_master' mounting point"
                    },
                    "hana_primary_site": {
                      "description": "HANA system replication primary site name"
                    },
                    "hana_sapcar_exe": {
                      "default": "",
                      "description": "Path to the sapcar executable, relative to the 'hana_inst_master' mounting point"
                    },
                    "hana_secondary_site": {
                      "description": "HANA system replication secondary site name"
                    },
                    "hana_sid": {
                      "description": "System identifier of the HANA system. It must be a 3 characters string (check the restrictions in the SAP documentation pages). Examples: prd, ha1"
                    },
                    "host_ips": {
                      "description": "ip addresses to set to the nodes"
                    },
                    "hwcct": {
                      "default": false,
                      "description": "Execute HANA Hardware Configuration Check Tool to bench filesystems"
                    },
                    "iscsi_srv_ip": {
                      "description": "iscsi server address"
                    },
                    "name": {
                      "default": "hana"
                    },
                    "network_subnet_id": {
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "resource_group_name": {
                    },
                    "sbd_storage_type": {
                      "default": "iscsi",
                      "description": "Choose the SBD storage type. Options: iscsi"
                    },
                    "scenario_type": {
                      "default": "performance-optimized",
                      "description": "Deployed scenario type. Available options: performance-optimized, cost-optimized"
                    },
                    "sles4sap_uri": {
                      "default": ""
                    },
                    "storage_account": {
                    },
                    "storage_account_key": {
                      "description": "Azure storage account access key"
                    },
                    "storage_account_name": {
                      "description": "Azure storage account where SAP hana installation files are stored"
                    },
                    "vm_size": {
                      "default": "Standard_E4s_v3"
                    }
                  }
                }
              },
              "iscsi_server": {
                "source": "./modules/iscsi_server",
                "expressions": {
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "bastion_host": {
                    "references": [
                      "module.bastion.public_ip"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "host_ips": {
                    "references": [
                      "local.iscsi_ip"
                    ]
                  },
                  "iscsi_count": {
                    "references": [
                      "local.iscsi_enabled"
                    ]
                  },
                  "iscsi_disk_size": {
                    "references": [
                      "var.iscsi_disk_size"
                    ]
                  },
                  "iscsi_srv_uri": {
                    "references": [
                      "var.iscsi_srv_uri"
                    ]
                  },
                  "lun_count": {
                    "references": [
                      "var.iscsi_lun_count"
                    ]
                  },
                  "network_subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.iscsi_os_image"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "vm_size": {
                    "references": [
                      "var.iscsi_vm_size"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "iscsisrv_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_network_interface.iscsisrv"
                        ]
                      }
                    },
                    "iscsisrv_name": {
                      "expression": {
                        "references": [
                          "azurerm_virtual_machine.iscsisrv"
                        ]
                      }
                    },
                    "iscsisrv_public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.iscsisrv"
                        ]
                      }
                    },
                    "iscsisrv_public_name": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.iscsisrv"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_image.iscsi_srv",
                      "mode": "managed",
                      "type": "azurerm_image",
                      "name": "iscsi_srv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "IscsiSrvImg"
                        },
                        "os_disk": [
                          {
                            "blob_uri": {
                              "references": [
                                "var.iscsi_srv_uri"
                              ]
                            },
                            "os_state": {
                              "constant_value": "Generalized"
                            },
                            "os_type": {
                              "constant_value": "Linux"
                            },
                            "size_gb": {
                              "constant_value": "32"
                            }
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.iscsi_srv_uri"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface.iscsisrv",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "iscsisrv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.host_ips",
                                "count.index"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "local.bastion_enabled",
                                "azurerm_public_ip.iscsisrv",
                                "count.index"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.iscsi_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.iscsisrv",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "iscsisrv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.iscsi_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.iscsisrv",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "iscsisrv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.iscsisrv",
                            "count.index"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "constant_value": "vmiscsisrv"
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_data_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "Empty"
                            },
                            "disk_size_gb": {
                              "references": [
                                "var.iscsi_disk_size"
                              ]
                            },
                            "lun": {
                              "constant_value": "0"
                            },
                            "managed_disk_type": {
                              "constant_value": "StandardSSD_LRS"
                            },
                            "name": {
                              "references": [
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "storage_image_reference": [
                          {
                            "id": {
                              "references": [
                                "var.iscsi_srv_uri",
                                "azurerm_image.iscsi_srv"
                              ]
                            },
                            "offer": {
                              "references": [
                                "var.iscsi_srv_uri",
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "var.iscsi_srv_uri",
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "var.iscsi_srv_uri",
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "var.iscsi_srv_uri",
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Premium_LRS"
                            },
                            "name": {
                              "references": [
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "var.vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.iscsi_count"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.iscsi_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "iscsi_provisioner",
                      "provider_config_key": "iscsi_server:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables",
                                "var.host_ips",
                                "count.index",
                                "var.lun_count",
                                "var.lun_count",
                                "var.lun_count"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.iscsisrv"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "var.iscsi_count"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_network_interface.iscsisrv",
                      "mode": "data",
                      "type": "azurerm_network_interface",
                      "name": "iscsisrv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_network_interface.iscsisrv",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.iscsisrv",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.iscsi_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.iscsisrv"
                      ]
                    },
                    {
                      "address": "data.azurerm_public_ip.iscsisrv",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "iscsisrv",
                      "provider_config_key": "iscsi_server:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.iscsisrv",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.iscsisrv",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.iscsi_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.iscsisrv"
                      ]
                    }
                  ],
                  "module_calls": {
                    "iscsi_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.iscsisrv"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.iscsisrv"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.iscsi_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "iscsi_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "iscsi_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.iscsi_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.common_variables",
                            "var.iscsi_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "iscsi_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "iscsi_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "az_region": {
                      "default": "westeurope"
                    },
                    "bastion_host": {
                      "default": "",
                      "description": "Bastion host address"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "host_ips": {
                      "description": "List of ip addresses to set to the machines"
                    },
                    "iscsi_count": {
                      "description": "Number of iscsi machines to deploy"
                    },
                    "iscsi_disk_size": {
                      "default": 10,
                      "description": "Disk size in GB used to create the LUNs and partitions to be served by the ISCSI service"
                    },
                    "iscsi_srv_uri": {
                      "default": ""
                    },
                    "lun_count": {
                      "default": 3,
                      "description": "Number of LUN (logical units) to serve with the iscsi server. Each LUN can be used as a unique sbd disk"
                    },
                    "network_subnet_id": {
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "resource_group_name": {
                    },
                    "storage_account": {
                    },
                    "vm_size": {
                      "default": "Standard_D2s_v3"
                    }
                  }
                }
              },
              "local_execution": {
                "source": "../generic_modules/local_exec",
                "expressions": {
                  "enabled": {
                    "references": [
                      "var.pre_deployment"
                    ]
                  }
                },
                "module": {
                  "resources": [
                    {
                      "address": "null_resource.pre_execution",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "pre_execution",
                      "provider_config_key": "local_execution:null",
                      "provisioners": [
                        {
                          "type": "local-exec",
                          "expressions": {
                            "command": {
                              "constant_value": "      cp pillar_examples/automatic/hana/* pillar/hana;\n      cp pillar_examples/automatic/drbd/* pillar/drbd;\n      cp pillar_examples/automatic/netweaver/* pillar/netweaver;\n"
                            },
                            "working_dir": {
                              "references": [
                                "path.module"
                              ]
                            }
                          }
                        },
                        {
                          "type": "local-exec",
                          "expressions": {
                            "command": {
                              "constant_value": "      if [ -e salt/sshkeys/cluster.id_rsa ]; then exit 0; fi\n      mkdir -p salt/sshkeys/;\n      rm -rf salt/sshkeys/*;\n      ssh-keygen -f salt/sshkeys/cluster.id_rsa -q -P \"\";\n"
                            },
                            "working_dir": {
                              "references": [
                                "path.module"
                              ]
                            }
                          }
                        }
                      ],
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.enabled"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "enabled": {
                      "default": false,
                      "description": "Enable pre deployment local execution"
                    }
                  }
                }
              },
              "monitoring": {
                "source": "./modules/monitoring",
                "expressions": {
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "bastion_host": {
                    "references": [
                      "module.bastion.public_ip"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "drbd_targets": {
                    "references": [
                      "var.drbd_enabled",
                      "local.drbd_ips"
                    ]
                  },
                  "hana_targets": {
                    "references": [
                      "local.hana_ips",
                      "var.hana_ha_enabled",
                      "local.hana_cluster_vip",
                      "local.hana_ips"
                    ]
                  },
                  "monitoring_enabled": {
                    "references": [
                      "var.monitoring_enabled"
                    ]
                  },
                  "monitoring_srv_ip": {
                    "references": [
                      "local.monitoring_ip"
                    ]
                  },
                  "monitoring_uri": {
                    "references": [
                      "var.monitoring_uri"
                    ]
                  },
                  "netweaver_targets": {
                    "references": [
                      "var.netweaver_enabled",
                      "local.netweaver_virtual_ips"
                    ]
                  },
                  "network_subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.monitoring_os_image"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "vm_size": {
                    "references": [
                      "var.monitoring_vm_size"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "monitoring_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_network_interface.monitoring"
                        ]
                      }
                    },
                    "monitoring_name": {
                      "expression": {
                        "references": [
                          "azurerm_virtual_machine.monitoring"
                        ]
                      }
                    },
                    "monitoring_public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.monitoring"
                        ]
                      }
                    },
                    "monitoring_public_name": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.monitoring"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_image.monitoring",
                      "mode": "managed",
                      "type": "azurerm_image",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "monitoringSrvImg"
                        },
                        "os_disk": [
                          {
                            "blob_uri": {
                              "references": [
                                "var.monitoring_uri"
                              ]
                            },
                            "os_state": {
                              "constant_value": "Generalized"
                            },
                            "os_type": {
                              "constant_value": "Linux"
                            },
                            "size_gb": {
                              "constant_value": "32"
                            }
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.monitoring_uri"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface.monitoring",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.monitoring_srv_ip"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "local.bastion_enabled",
                                "azurerm_public_ip.monitoring[0]"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "nic-monitoring"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.monitoring_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.monitoring",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "pip-monitoring"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.monitoring_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.monitoring",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "vmmonitoring"
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.monitoring[0]"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "constant_value": "vmmonitoring"
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_data_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "Empty"
                            },
                            "disk_size_gb": {
                              "constant_value": "10"
                            },
                            "lun": {
                              "constant_value": "0"
                            },
                            "managed_disk_type": {
                              "constant_value": "Standard_LRS"
                            },
                            "name": {
                              "constant_value": "disk-monitoring-Data01"
                            }
                          }
                        ],
                        "storage_image_reference": [
                          {
                            "id": {
                              "references": [
                                "var.monitoring_uri",
                                "azurerm_image.monitoring[0]"
                              ]
                            },
                            "offer": {
                              "references": [
                                "var.monitoring_uri",
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "var.monitoring_uri",
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "var.monitoring_uri",
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "var.monitoring_uri",
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Premium_LRS"
                            },
                            "name": {
                              "constant_value": "disk-monitoring-Os"
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "var.vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.monitoring_enabled"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.monitoring_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "monitoring_provisioner",
                      "provider_config_key": "monitoring:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables",
                                "var.timezone",
                                "var.monitoring_srv_ip",
                                "local.bastion_enabled",
                                "data.azurerm_network_interface.monitoring[0]",
                                "data.azurerm_public_ip.monitoring[0]",
                                "var.hana_targets",
                                "var.drbd_targets",
                                "var.netweaver_targets"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.monitoring[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "var.monitoring_enabled"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_network_interface.monitoring",
                      "mode": "data",
                      "type": "azurerm_network_interface",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_network_interface.monitoring[0]"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.monitoring[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.monitoring_enabled"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.monitoring"
                      ]
                    },
                    {
                      "address": "data.azurerm_public_ip.monitoring",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "monitoring",
                      "provider_config_key": "monitoring:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.monitoring[0]"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.monitoring[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "var.monitoring_enabled"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.monitoring"
                      ]
                    }
                  ],
                  "module_calls": {
                    "monitoring_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.monitoring"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.monitoring"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.monitoring_enabled"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "monitoring_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "monitoring_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.monitoring_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.common_variables",
                            "var.monitoring_enabled"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "monitoring_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "monitoring_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "az_region": {
                      "default": "westeurope"
                    },
                    "bastion_host": {
                      "default": "",
                      "description": "Bastion host address"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "drbd_targets": {
                      "default": [

                      ],
                      "description": "IPs of DRBD hosts you want to monitor"
                    },
                    "hana_targets": {
                      "description": "IPs of HANA hosts you want to monitor; the last one is assumed to be the virtual IP of the active HA instance."
                    },
                    "monitoring_enabled": {
                      "default": false,
                      "description": "enable the host to be monitored by exporters, e.g node_exporter"
                    },
                    "monitoring_srv_ip": {
                      "default": "",
                      "description": "monitoring server address"
                    },
                    "monitoring_uri": {
                      "default": ""
                    },
                    "netweaver_targets": {
                      "default": [

                      ],
                      "description": "IPs of Netweaver hosts you want to monitor; the first two are assumed to be the virtual IPs of the HA instances."
                    },
                    "network_subnet_id": {
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "resource_group_name": {
                    },
                    "storage_account": {
                    },
                    "timezone": {
                      "default": "Europe/Berlin",
                      "description": "Timezone setting for all VMs"
                    },
                    "vm_size": {
                      "default": "Standard_D2s_v3"
                    }
                  }
                }
              },
              "netweaver_node": {
                "source": "./modules/netweaver_node",
                "expressions": {
                  "app_accelerated_networking": {
                    "references": [
                      "var.netweaver_app_accelerated_networking"
                    ]
                  },
                  "app_server_count": {
                    "references": [
                      "var.netweaver_enabled",
                      "var.netweaver_app_server_count"
                    ]
                  },
                  "app_vm_size": {
                    "references": [
                      "var.netweaver_app_vm_size"
                    ]
                  },
                  "ascs_instance_number": {
                    "references": [
                      "var.netweaver_ascs_instance_number"
                    ]
                  },
                  "az_region": {
                    "references": [
                      "var.az_region"
                    ]
                  },
                  "bastion_host": {
                    "references": [
                      "module.bastion.public_ip"
                    ]
                  },
                  "cluster_ssh_key": {
                    "references": [
                      "var.cluster_ssh_key"
                    ]
                  },
                  "cluster_ssh_pub": {
                    "references": [
                      "var.cluster_ssh_pub"
                    ]
                  },
                  "common_variables": {
                    "references": [
                      "module.common_variables.configuration"
                    ]
                  },
                  "data_disk_caching": {
                    "references": [
                      "var.netweaver_data_disk_caching"
                    ]
                  },
                  "data_disk_size": {
                    "references": [
                      "var.netweaver_data_disk_size"
                    ]
                  },
                  "data_disk_type": {
                    "references": [
                      "var.netweaver_data_disk_type"
                    ]
                  },
                  "ers_instance_number": {
                    "references": [
                      "var.netweaver_ers_instance_number"
                    ]
                  },
                  "fencing_mechanism": {
                    "references": [
                      "var.netweaver_cluster_fencing_mechanism"
                    ]
                  },
                  "ha_enabled": {
                    "references": [
                      "var.netweaver_ha_enabled"
                    ]
                  },
                  "hana_instance_number": {
                    "references": [
                      "var.hana_instance_number"
                    ]
                  },
                  "hana_ip": {
                    "references": [
                      "var.hana_ha_enabled",
                      "local.hana_cluster_vip",
                      "local.hana_ips"
                    ]
                  },
                  "hana_master_password": {
                    "references": [
                      "var.hana_master_password"
                    ]
                  },
                  "hana_sid": {
                    "references": [
                      "var.hana_sid"
                    ]
                  },
                  "host_ips": {
                    "references": [
                      "local.netweaver_ips"
                    ]
                  },
                  "iscsi_srv_ip": {
                    "references": [
                      "module.iscsi_server.iscsisrv_ip"
                    ]
                  },
                  "netweaver_additional_dvds": {
                    "references": [
                      "var.netweaver_additional_dvds"
                    ]
                  },
                  "netweaver_extract_dir": {
                    "references": [
                      "var.netweaver_extract_dir"
                    ]
                  },
                  "netweaver_image_uri": {
                    "references": [
                      "var.netweaver_image_uri"
                    ]
                  },
                  "netweaver_inst_folder": {
                    "references": [
                      "var.netweaver_inst_folder"
                    ]
                  },
                  "netweaver_master_password": {
                    "references": [
                      "var.netweaver_master_password"
                    ]
                  },
                  "netweaver_nfs_share": {
                    "references": [
                      "var.drbd_enabled",
                      "local.drbd_cluster_vip",
                      "var.netweaver_sid",
                      "var.netweaver_nfs_share"
                    ]
                  },
                  "netweaver_product_id": {
                    "references": [
                      "var.netweaver_product_id"
                    ]
                  },
                  "netweaver_sapcar_exe": {
                    "references": [
                      "var.netweaver_sapcar_exe"
                    ]
                  },
                  "netweaver_sapexe_folder": {
                    "references": [
                      "var.netweaver_sapexe_folder"
                    ]
                  },
                  "netweaver_sid": {
                    "references": [
                      "var.netweaver_sid"
                    ]
                  },
                  "netweaver_swpm_folder": {
                    "references": [
                      "var.netweaver_swpm_folder"
                    ]
                  },
                  "netweaver_swpm_sar": {
                    "references": [
                      "var.netweaver_swpm_sar"
                    ]
                  },
                  "network_subnet_id": {
                    "references": [
                      "local.subnet_id"
                    ]
                  },
                  "os_image": {
                    "references": [
                      "local.netweaver_os_image"
                    ]
                  },
                  "pas_instance_number": {
                    "references": [
                      "var.netweaver_pas_instance_number"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.resource_group_name"
                    ]
                  },
                  "sbd_storage_type": {
                    "references": [
                      "var.sbd_storage_type"
                    ]
                  },
                  "storage_account": {
                    "references": [
                      "azurerm_storage_account.mytfstorageacc"
                    ]
                  },
                  "storage_account_key": {
                    "references": [
                      "var.netweaver_storage_account_key"
                    ]
                  },
                  "storage_account_name": {
                    "references": [
                      "var.netweaver_storage_account_name"
                    ]
                  },
                  "storage_account_path": {
                    "references": [
                      "var.netweaver_storage_account"
                    ]
                  },
                  "virtual_host_ips": {
                    "references": [
                      "local.netweaver_virtual_ips"
                    ]
                  },
                  "xscs_accelerated_networking": {
                    "references": [
                      "var.netweaver_xscs_accelerated_networking"
                    ]
                  },
                  "xscs_server_count": {
                    "references": [
                      "local.netweaver_xscs_server_count"
                    ]
                  },
                  "xscs_vm_size": {
                    "references": [
                      "var.netweaver_xscs_vm_size"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "netweaver_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_network_interface.netweaver"
                        ]
                      }
                    },
                    "netweaver_name": {
                      "expression": {
                        "references": [
                          "azurerm_virtual_machine.netweaver"
                        ]
                      }
                    },
                    "netweaver_public_ip": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.netweaver"
                        ]
                      }
                    },
                    "netweaver_public_name": {
                      "expression": {
                        "references": [
                          "data.azurerm_public_ip.netweaver"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_availability_set.netweaver-app-availability-set",
                      "mode": "managed",
                      "type": "azurerm_availability_set",
                      "name": "netweaver-app-availability-set",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "managed": {
                          "constant_value": "true"
                        },
                        "name": {
                          "constant_value": "avset-app-netweaver"
                        },
                        "platform_fault_domain_count": {
                          "constant_value": 2
                        },
                        "platform_update_domain_count": {
                          "constant_value": 10
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.app_server_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_availability_set.netweaver-xscs-availability-set",
                      "mode": "managed",
                      "type": "azurerm_availability_set",
                      "name": "netweaver-xscs-availability-set",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "managed": {
                          "constant_value": "true"
                        },
                        "name": {
                          "constant_value": "avset-xscs-netweaver"
                        },
                        "platform_fault_domain_count": {
                          "constant_value": 2
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_image.netweaver-image",
                      "mode": "managed",
                      "type": "azurerm_image",
                      "name": "netweaver-image",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "img-netweaver"
                        },
                        "os_disk": [
                          {
                            "blob_uri": {
                              "references": [
                                "var.netweaver_image_uri"
                              ]
                            },
                            "os_state": {
                              "constant_value": "Generalized"
                            },
                            "os_type": {
                              "constant_value": "Linux"
                            },
                            "size_gb": {
                              "constant_value": "32"
                            }
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.netweaver_image_uri"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb.netweaver-load-balancer",
                      "mode": "managed",
                      "type": "azurerm_lb",
                      "name": "netweaver-load-balancer",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "frontend_ip_configuration": [
                          {
                            "name": {
                              "constant_value": "lbfe-netweaver-ascs"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.virtual_host_ips"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          },
                          {
                            "name": {
                              "constant_value": "lbfe-netweaver-ers"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.virtual_host_ips"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "constant_value": "lb-netweaver"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_backend_address_pool.netweaver-backend-pool",
                      "mode": "managed",
                      "type": "azurerm_lb_backend_address_pool",
                      "name": "netweaver-backend-pool",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.netweaver-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbbe-netweaver"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_probe.netweaver-ascs-health-probe",
                      "mode": "managed",
                      "type": "azurerm_lb_probe",
                      "name": "netweaver-ascs-health-probe",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "interval_in_seconds": {
                          "constant_value": 5
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.netweaver-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbhp-netweaver-ascs"
                        },
                        "number_of_probes": {
                          "constant_value": 2
                        },
                        "port": {
                          "references": [
                            "var.ascs_instance_number"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_probe.netweaver-ers-health-probe",
                      "mode": "managed",
                      "type": "azurerm_lb_probe",
                      "name": "netweaver-ers-health-probe",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "interval_in_seconds": {
                          "constant_value": 5
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.netweaver-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "constant_value": "lbhp-netweaver-ers"
                        },
                        "number_of_probes": {
                          "constant_value": 2
                        },
                        "port": {
                          "references": [
                            "var.ers_instance_number"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_ha_infra"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.ascs-lb-rules",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "ascs-lb-rules",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.netweaver-backend-pool[0]"
                          ]
                        },
                        "backend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-netweaver-ascs"
                        },
                        "frontend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.netweaver-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.netweaver-ascs-health-probe[0]"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.ascs_lb_rules_ports"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_lb_rule.ers-lb-rules",
                      "mode": "managed",
                      "type": "azurerm_lb_rule",
                      "name": "ers-lb-rules",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.netweaver-backend-pool[0]"
                          ]
                        },
                        "backend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "enable_floating_ip": {
                          "constant_value": "true"
                        },
                        "frontend_ip_configuration_name": {
                          "constant_value": "lbfe-netweaver-ers"
                        },
                        "frontend_port": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "loadbalancer_id": {
                          "references": [
                            "azurerm_lb.netweaver-load-balancer[0]"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "probe_id": {
                          "references": [
                            "azurerm_lb_probe.netweaver-ers-health-probe[0]"
                          ]
                        },
                        "protocol": {
                          "constant_value": "Tcp"
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.ers_lb_rules_ports"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_managed_disk.app_server_disk",
                      "mode": "managed",
                      "type": "azurerm_managed_disk",
                      "name": "app_server_disk",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "create_option": {
                          "constant_value": "Empty"
                        },
                        "disk_size_gb": {
                          "references": [
                            "var.data_disk_size"
                          ]
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_account_type": {
                          "references": [
                            "var.data_disk_type"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.app_server_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface.netweaver",
                      "mode": "managed",
                      "type": "azurerm_network_interface",
                      "name": "netweaver",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "enable_accelerated_networking": {
                          "references": [
                            "count.index",
                            "var.xscs_server_count",
                            "var.xscs_accelerated_networking",
                            "var.app_accelerated_networking"
                          ]
                        },
                        "ip_configuration": [
                          {
                            "name": {
                              "constant_value": "ipconf-primary"
                            },
                            "private_ip_address": {
                              "references": [
                                "var.host_ips",
                                "count.index"
                              ]
                            },
                            "private_ip_address_allocation": {
                              "constant_value": "static"
                            },
                            "public_ip_address_id": {
                              "references": [
                                "local.bastion_enabled",
                                "azurerm_public_ip.netweaver",
                                "count.index"
                              ]
                            },
                            "subnet_id": {
                              "references": [
                                "var.network_subnet_id"
                              ]
                            }
                          }
                        ],
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.vm_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_network_interface_backend_address_pool_association.netweaver-nodes",
                      "mode": "managed",
                      "type": "azurerm_network_interface_backend_address_pool_association",
                      "name": "netweaver-nodes",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "backend_address_pool_id": {
                          "references": [
                            "azurerm_lb_backend_address_pool.netweaver-backend-pool[0]"
                          ]
                        },
                        "ip_configuration_name": {
                          "constant_value": "ipconf-primary"
                        },
                        "network_interface_id": {
                          "references": [
                            "azurerm_network_interface.netweaver",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.xscs_server_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_public_ip.netweaver",
                      "mode": "managed",
                      "type": "azurerm_public_ip",
                      "name": "netweaver",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "allocation_method": {
                          "constant_value": "Dynamic"
                        },
                        "idle_timeout_in_minutes": {
                          "constant_value": 30
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "local.vm_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine.netweaver",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine",
                      "name": "netweaver",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "availability_set_id": {
                          "references": [
                            "count.index",
                            "var.xscs_server_count",
                            "local.create_ha_infra",
                            "azurerm_availability_set.netweaver-xscs-availability-set[0]",
                            "azurerm_availability_set.netweaver-app-availability-set[0]"
                          ]
                        },
                        "boot_diagnostics": [
                          {
                            "enabled": {
                              "constant_value": "true"
                            },
                            "storage_uri": {
                              "references": [
                                "var.storage_account"
                              ]
                            }
                          }
                        ],
                        "delete_data_disks_on_termination": {
                          "constant_value": true
                        },
                        "delete_os_disk_on_termination": {
                          "constant_value": true
                        },
                        "location": {
                          "references": [
                            "var.az_region"
                          ]
                        },
                        "name": {
                          "references": [
                            "count.index"
                          ]
                        },
                        "network_interface_ids": {
                          "references": [
                            "azurerm_network_interface.netweaver",
                            "count.index"
                          ]
                        },
                        "os_profile": [
                          {
                            "admin_username": {
                              "references": [
                                "var.common_variables"
                              ]
                            },
                            "computer_name": {
                              "references": [
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "os_profile_linux_config": [
                          {
                            "disable_password_authentication": {
                              "constant_value": true
                            },
                            "ssh_keys": [
                              {
                                "key_data": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                },
                                "path": {
                                  "references": [
                                    "var.common_variables"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "resource_group_name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "storage_image_reference": [
                          {
                            "id": {
                              "references": [
                                "var.netweaver_image_uri",
                                "azurerm_image.netweaver-image"
                              ]
                            },
                            "offer": {
                              "references": [
                                "var.netweaver_image_uri",
                                "module.os_image_reference.offer"
                              ]
                            },
                            "publisher": {
                              "references": [
                                "var.netweaver_image_uri",
                                "module.os_image_reference.publisher"
                              ]
                            },
                            "sku": {
                              "references": [
                                "var.netweaver_image_uri",
                                "module.os_image_reference.sku"
                              ]
                            },
                            "version": {
                              "references": [
                                "var.netweaver_image_uri",
                                "module.os_image_reference.version"
                              ]
                            }
                          }
                        ],
                        "storage_os_disk": [
                          {
                            "caching": {
                              "constant_value": "ReadWrite"
                            },
                            "create_option": {
                              "constant_value": "FromImage"
                            },
                            "managed_disk_type": {
                              "constant_value": "Premium_LRS"
                            },
                            "name": {
                              "references": [
                                "count.index"
                              ]
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "vm_size": {
                          "references": [
                            "count.index",
                            "var.xscs_server_count",
                            "var.xscs_vm_size",
                            "var.app_vm_size"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.vm_count"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_virtual_machine_data_disk_attachment.app_server_disk",
                      "mode": "managed",
                      "type": "azurerm_virtual_machine_data_disk_attachment",
                      "name": "app_server_disk",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "caching": {
                          "references": [
                            "var.data_disk_caching"
                          ]
                        },
                        "lun": {
                          "references": [
                            "local.additional_lun_number"
                          ]
                        },
                        "managed_disk_id": {
                          "references": [
                            "azurerm_managed_disk.app_server_disk",
                            "count.index"
                          ]
                        },
                        "virtual_machine_id": {
                          "references": [
                            "azurerm_virtual_machine.netweaver",
                            "count.index",
                            "var.xscs_server_count"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.app_server_count"
                        ]
                      }
                    },
                    {
                      "address": "null_resource.netweaver_provisioner",
                      "mode": "managed",
                      "type": "null_resource",
                      "name": "netweaver_provisioner",
                      "provider_config_key": "netweaver_node:null",
                      "provisioners": [
                        {
                          "type": "file",
                          "expressions": {
                            "content": {
                              "references": [
                                "var.common_variables",
                                "count.index",
                                "var.network_domain",
                                "var.host_ips",
                                "var.virtual_host_ips",
                                "var.host_ips",
                                "count.index",
                                "var.cluster_ssh_pub",
                                "var.cluster_ssh_key",
                                "var.ha_enabled",
                                "var.app_server_count",
                                "count.index",
                                "var.xscs_server_count",
                                "local.additional_lun_number",
                                "var.fencing_mechanism",
                                "var.sbd_storage_type",
                                "var.iscsi_srv_ip",
                                "var.netweaver_sid",
                                "var.ascs_instance_number",
                                "var.ers_instance_number",
                                "var.pas_instance_number",
                                "var.netweaver_master_password",
                                "var.netweaver_product_id",
                                "var.netweaver_inst_folder",
                                "var.netweaver_extract_dir",
                                "var.netweaver_swpm_folder",
                                "var.netweaver_sapcar_exe",
                                "var.netweaver_swpm_sar",
                                "var.netweaver_sapexe_folder",
                                "var.netweaver_additional_dvds",
                                "var.netweaver_nfs_share",
                                "var.storage_account_name",
                                "var.storage_account_key",
                                "var.storage_account_path",
                                "var.hana_ip",
                                "var.hana_sid",
                                "var.hana_instance_number",
                                "var.hana_master_password"
                              ]
                            },
                            "destination": {
                              "constant_value": "/tmp/grains"
                            }
                          }
                        }
                      ],
                      "expressions": {
                        "triggers": {
                          "references": [
                            "azurerm_virtual_machine.netweaver"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.common_variables",
                          "local.vm_count"
                        ]
                      }
                    },
                    {
                      "address": "data.azurerm_network_interface.netweaver",
                      "mode": "data",
                      "type": "azurerm_network_interface",
                      "name": "netweaver",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_network_interface.netweaver",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.netweaver",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.vm_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.netweaver"
                      ]
                    },
                    {
                      "address": "data.azurerm_public_ip.netweaver",
                      "mode": "data",
                      "type": "azurerm_public_ip",
                      "name": "netweaver",
                      "provider_config_key": "netweaver_node:azurerm",
                      "expressions": {
                        "name": {
                          "references": [
                            "azurerm_public_ip.netweaver",
                            "count.index"
                          ]
                        },
                        "resource_group_name": {
                          "references": [
                            "azurerm_virtual_machine.netweaver",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.bastion_enabled",
                          "local.vm_count"
                        ]
                      },
                      "depends_on": [
                        "azurerm_virtual_machine.netweaver"
                      ]
                    }
                  ],
                  "module_calls": {
                    "netweaver_on_destroy": {
                      "source": "../../../generic_modules/on_destroy",
                      "expressions": {
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "dependencies": {
                          "references": [
                            "data.azurerm_public_ip.netweaver"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "azurerm_virtual_machine.netweaver"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "local.vm_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.on_destroy",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "on_destroy",
                            "provider_config_key": "netweaver_on_destroy:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp/on_destroy.sh"
                                  },
                                  "source": {
                                    "references": [
                                      "self"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo timeout 300 sh /tmp/on_destroy.sh"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids",
                                  "var.user",
                                  "var.password",
                                  "var.private_key",
                                  "var.public_ips",
                                  "var.bastion_host",
                                  "var.bastion_private_key",
                                  "path.module"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.node_count"
                              ]
                            },
                            "depends_on": [
                              "var.dependencies"
                            ]
                          }
                        ],
                        "variables": {
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion"
                          },
                          "dependencies": {
                            "default": [

                            ],
                            "description": "List of resources that are needed to create the SSH connection"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "netweaver_provision": {
                      "source": "../../../generic_modules/salt_provisioner",
                      "expressions": {
                        "background": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "bastion_host": {
                          "references": [
                            "var.bastion_host"
                          ]
                        },
                        "bastion_private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "instance_ids": {
                          "references": [
                            "null_resource.netweaver_provisioner"
                          ]
                        },
                        "node_count": {
                          "references": [
                            "var.common_variables",
                            "local.vm_count"
                          ]
                        },
                        "private_key": {
                          "references": [
                            "var.common_variables"
                          ]
                        },
                        "public_ips": {
                          "references": [
                            "local.provisioning_addresses"
                          ]
                        },
                        "user": {
                          "references": [
                            "var.common_variables"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "null_resource.provision",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision",
                            "provider_config_key": "netweaver_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /tmp/salt/provision.sh -sol /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "references": [
                                      "var.reboot"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "sudo bash /srv/salt/provision.sh -pdql /var/log/salt-result.log"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          },
                          {
                            "address": "null_resource.provision_background",
                            "mode": "managed",
                            "type": "null_resource",
                            "name": "provision_background",
                            "provider_config_key": "netweaver_provision:null",
                            "provisioners": [
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "file",
                                "expressions": {
                                  "destination": {
                                    "constant_value": "/tmp"
                                  },
                                  "source": {
                                    "references": [
                                      "path.module"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "remote-exec",
                                "expressions": {
                                  "inline": {
                                    "constant_value": [
                                      "nohup sudo bash /tmp/salt/provision.sh -l /var/log/salt-result.log > /dev/null 2>&1 &",
                                      "return_code=$? && sleep 1 && exit $return_code"
                                    ]
                                  }
                                }
                              }
                            ],
                            "expressions": {
                              "triggers": {
                                "references": [
                                  "var.instance_ids"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.background",
                                "var.node_count"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "background": {
                            "default": false,
                            "description": "Execute the provisioning in background"
                          },
                          "bastion_host": {
                            "default": "",
                            "description": "Address of a bastion host to use in the SSH connections. Let empty to use the normal connection"
                          },
                          "bastion_private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. It must be provided if bastion is enabled"
                          },
                          "instance_ids": {
                            "description": "List with the instance ids that will trigger the provisioner"
                          },
                          "node_count": {
                            "description": "Number of nodes to run the provisioner"
                          },
                          "password": {
                            "default": "",
                            "description": "Password for the SSH connection"
                          },
                          "private_key": {
                            "default": "",
                            "description": "Content of a SSH private key or path to an already existing SSH private key. It has priority over password variable"
                          },
                          "public_ips": {
                            "description": "List of ips used to connect through SSH"
                          },
                          "reboot": {
                            "default": true,
                            "description": "Reboot the machines after the initial update of the packages"
                          },
                          "user": {
                            "default": "root",
                            "description": "User for the SSH connection"
                          }
                        }
                      }
                    },
                    "os_image_reference": {
                      "source": "../../modules/os_image_reference",
                      "expressions": {
                        "os_image": {
                          "references": [
                            "var.os_image"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "offer": {
                            "expression": {
                              "references": [
                                "local.offer"
                              ]
                            }
                          },
                          "publisher": {
                            "expression": {
                              "references": [
                                "local.publisher"
                              ]
                            }
                          },
                          "sku": {
                            "expression": {
                              "references": [
                                "local.sku"
                              ]
                            }
                          },
                          "version": {
                            "expression": {
                              "references": [
                                "local.version"
                              ]
                            }
                          }
                        },
                        "variables": {
                          "os_image": {
                            "description": "sles4sap image used to create the this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "app_accelerated_networking": {
                      "default": false,
                      "description": "Enable accelerated networking for netweaver application server machines"
                    },
                    "app_server_count": {
                      "default": 2
                    },
                    "app_vm_size": {
                      "default": "Standard_D2s_v3"
                    },
                    "ascs_instance_number": {
                      "default": "00",
                      "description": "ASCS instance number"
                    },
                    "az_region": {
                      "default": "westeurope"
                    },
                    "bastion_host": {
                      "default": "",
                      "description": "Bastion host address"
                    },
                    "cluster_ssh_key": {
                      "description": "path for the private key needed by the cluster"
                    },
                    "cluster_ssh_pub": {
                      "description": "path for the public key needed by the cluster"
                    },
                    "common_variables": {
                      "description": "Output of the common_variables module"
                    },
                    "data_disk_caching": {
                      "default": "ReadWrite"
                    },
                    "data_disk_size": {
                      "default": "128",
                      "description": "Size of the Netweaver data disks, informed in GB"
                    },
                    "data_disk_type": {
                      "default": "Premium_LRS"
                    },
                    "ers_instance_number": {
                      "default": "10",
                      "description": "ERS instance number"
                    },
                    "fencing_mechanism": {
                      "description": "Choose the fencing mechanism for the cluster. Options: sbd"
                    },
                    "ha_enabled": {
                      "default": true,
                      "description": "Enable HA cluster in top of Netweaver ASCS and ERS instances"
                    },
                    "hana_instance_number": {
                      "description": "Instance number of the HANA system. It must be a 2 digits string. Examples: 00, 01, 10"
                    },
                    "hana_ip": {
                      "description": "Ip address of the hana database"
                    },
                    "hana_master_password": {
                      "description": "Master password for the HANA system (sidadm user included)"
                    },
                    "hana_sid": {
                      "description": "System identifier of the HANA system (e.g.: HA1 or PRD)"
                    },
                    "host_ips": {
                      "default": [
                        "10.74.1.30",
                        "10.74.1.31",
                        "10.74.1.32",
                        "10.74.1.33"
                      ],
                      "description": "ip addresses to set to the nodes"
                    },
                    "iscsi_srv_ip": {
                      "description": "iscsi server address"
                    },
                    "netweaver_additional_dvds": {
                      "default": [

                      ],
                      "description": "Software folder with additional SAP software needed to install netweaver (NW export folder and HANA HDB client for example), path relative from the `netweaver_inst_media` mounted point"
                    },
                    "netweaver_extract_dir": {
                      "default": "/sapmedia_extract/NW",
                      "description": "Extraction path for Netweaver media archives of SWPM and netweaver additional dvds"
                    },
                    "netweaver_image_uri": {
                      "default": ""
                    },
                    "netweaver_inst_folder": {
                      "default": "/sapmedia/NW",
                      "description": "Folder where SAP Netweaver installation files are mounted"
                    },
                    "netweaver_master_password": {
                      "description": "Master password for the Netweaver system (sidadm user included)"
                    },
                    "netweaver_nfs_share": {
                      "description": "URL of the NFS share where /sapmnt and /usr/sap/{sid}/SYS will be mounted. This folder must have the sapmnt and usrsapsys folders"
                    },
                    "netweaver_product_id": {
                      "default": "NW750.HDB.ABAPHA",
                      "description": "Netweaver installation product. Even though the module is about Netweaver, it can be used to install other SAP instances like S4/HANA"
                    },
                    "netweaver_sapcar_exe": {
                      "default": "",
                      "description": "Path to sapcar executable, relative from the `netweaver_inst_media` mounted point"
                    },
                    "netweaver_sapexe_folder": {
                      "default": "",
                      "description": "Software folder where needed sapexe `SAR` executables are stored (sapexe, sapexedb, saphostagent), path relative from the `netweaver_inst_media` mounted point"
                    },
                    "netweaver_sid": {
                      "default": "HA1",
                      "description": "System identifier of the Netweaver installation (e.g.: HA1 or PRD)"
                    },
                    "netweaver_swpm_folder": {
                      "default": "",
                      "description": "Netweaver software SWPM folder, path relative from the `netweaver_inst_media` mounted point"
                    },
                    "netweaver_swpm_sar": {
                      "default": "",
                      "description": "SWPM installer sar archive containing the installer, path relative from the `netweaver_inst_media` mounted point"
                    },
                    "network_domain": {
                      "default": "tf.local"
                    },
                    "network_subnet_id": {
                    },
                    "os_image": {
                      "description": "sles4sap image used to create this module machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
                    },
                    "pas_instance_number": {
                      "default": "01",
                      "description": "PAS instance number"
                    },
                    "resource_group_name": {
                    },
                    "sbd_storage_type": {
                      "default": "iscsi",
                      "description": "Choose the SBD storage type. Options: iscsi"
                    },
                    "storage_account": {
                    },
                    "storage_account_key": {
                      "description": "Azure storage account access key"
                    },
                    "storage_account_name": {
                      "description": "Azure storage account where SAP Netweaver installation files are stored"
                    },
                    "storage_account_path": {
                      "description": "Azure storage account path where SAP Netweaver installation files are stored"
                    },
                    "virtual_host_ips": {
                      "default": [
                        "10.74.1.35",
                        "10.74.1.36",
                        "10.74.1.37",
                        "10.74.1.38"
                      ],
                      "description": "virtual ip addresses to set to the nodes"
                    },
                    "xscs_accelerated_networking": {
                      "default": false,
                      "description": "Enable accelerated networking for netweaver xSCS machines"
                    },
                    "xscs_server_count": {
                      "default": 2
                    },
                    "xscs_vm_size": {
                      "default": "Standard_D2s_v3"
                    }
                  }
                }
              }
            },
            "variables": {
              "additional_packages": {
                "default": [

                ],
                "description": "Extra packages to be installed"
              },
              "admin_user": {
                "description": "Administration user used to create the machines"
              },
              "authorized_keys": {
                "default": [

                ],
                "description": "List of additional authorized SSH public keys content or path to already existing SSH public keys to access the created machines with the used admin user (admin_user variable in this case)"
              },
              "az_region": {
                "default": "westeurope",
                "description": "Azure region where the deployment machines will be created"
              },
              "background": {
                "default": false,
                "description": "Run the provisioner execution in background if set to true finishing terraform execution"
              },
              "bastion_enabled": {
                "default": true,
                "description": "Create a VM to work as a bastion to avoid the usage of public ip addresses and manage the ssh connection to the other machines"
              },
              "bastion_os_image": {
                "default": "",
                "description": "sles4sap image used to create the bastion machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "bastion_private_key": {
                "default": "",
                "description": "Content of a SSH private key or path to an already existing SSH private key to the bastion. If it's not set the key provided in private_key will be used"
              },
              "bastion_public_key": {
                "default": "",
                "description": "Content of a SSH public key or path to an already existing SSH public key to the bastion. If it's not set the key provided in public_key will be used"
              },
              "cluster_ssh_key": {
                "description": "Path to a SSH private key used during the cluster creation. The key must be passwordless"
              },
              "cluster_ssh_pub": {
                "description": "Path to a SSH public key used during the cluster creation. The key must be passwordless"
              },
              "deployment_name": {
                "default": "",
                "description": "Suffix string added to some of the infrastructure resources names. If it is not provided, the terraform workspace string is used as suffix"
              },
              "drbd_cluster_fencing_mechanism": {
                "default": "sbd",
                "description": "Select the DRBD cluster fencing mechanism. Options: sbd"
              },
              "drbd_cluster_vip": {
                "default": "",
                "description": "Virtual ip for the drbd cluster. If it's not set the address will be auto generated from the provided vnet address range"
              },
              "drbd_enabled": {
                "default": false,
                "description": "Enable the DRBD cluster for nfs"
              },
              "drbd_image_uri": {
                "default": "",
                "description": "Path to a custom azure image in a storage account used to create the drbd machines"
              },
              "drbd_ips": {
                "default": [

                ],
                "description": "ip addresses to set to the drbd cluster nodes. If it's not set the addresses will be auto generated from the provided vnet address range"
              },
              "drbd_nfs_mounting_point": {
                "default": "/mnt_permanent/sapdata",
                "description": "Mounting point of the NFS share created in to of DRBD (`/mnt` must not be used in Azure)"
              },
              "drbd_os_image": {
                "default": "",
                "description": "sles4sap image used to create the DRBD machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "drbd_vm_size": {
                "default": "Standard_D2s_v3",
                "description": "VM size for the DRBD machine"
              },
              "ha_sap_deployment_repo": {
                "default": "",
                "description": "Repository url used to install development versions of HA/SAP deployment packages. If the SLE version is not present in the URL, it will be automatically detected"
              },
              "hana_active_active": {
                "default": false,
                "description": "Enable an Active/Active HANA system replication setup"
              },
              "hana_archive_file": {
                "default": "",
                "description": "Path to the HANA database server installation SAR archive (for SAR files, `hana_sapcar_exe` variable is mandatory) or HANA platform archive file in ZIP or RAR (EXE) format, relative to the 'hana_inst_master' mounting point. Use this parameter if the HANA media archive is not already extracted"
              },
              "hana_cluster_fencing_mechanism": {
                "default": "sbd",
                "description": "Select the HANA cluster fencing mechanism. Options: sbd"
              },
              "hana_cluster_vip": {
                "default": "",
                "description": "Virtual ip for the hana cluster. If it's not set the address will be auto generated from the provided vnet address range"
              },
              "hana_cluster_vip_secondary": {
                "default": "",
                "description": "IP address used to configure the hana cluster floating IP for the secondary node in an Active/Active mode. Let empty to use an auto generated address"
              },
              "hana_cost_optimized_instance_number": {
                "default": "01",
                "description": "Instance number of the HANA cost-optimized system. It must be a 2 digits string. Examples: 00, 01, 10"
              },
              "hana_cost_optimized_master_password": {
                "default": "",
                "description": "Master password for the HANA system (sidadm user included)"
              },
              "hana_cost_optimized_sid": {
                "default": "qas",
                "description": "System identifier of the HANA cost-optimized system. It must be a 3 characters string (check the restrictions in the SAP documentation pages). Examples: prd, ha1"
              },
              "hana_count": {
                "default": "2",
                "description": "Number of hana nodes"
              },
              "hana_data_disks_configuration": {
                "default": {
                  "caching": "None,None,None,None,None,None,None",
                  "disks_size": "128,128,128,128,128,128,128",
                  "disks_type": "Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS,Premium_LRS",
                  "luns": "0,1#2,3#4#5#6",
                  "lv_sizes": "100#100#100#100#100",
                  "names": "data#log#shared#usrsap#backup",
                  "paths": "/hana/data#/hana/log#/hana/shared#/usr/sap#/hana/backup",
                  "writeaccelerator": "false,false,false,false,false,false,false"
                },
                "description": "    This map describes how the disks will be formatted to create the definitive configuration during the provisioning.\n    disks_type, disks_size, caching and writeaccelerator are used during the disks creation. The number of elements must match in all of them\n    \"#\" character is used to split the volume groups, while \",\" is used to define the logical volumes for each group\n    The number of groups splitted by \"#\" must match in all of the entries\n    names -> The names of the volume groups (example datalog#shared#usrsap#backup#sapmnt)\n    luns  -> The luns or disks used for each volume group. The number of luns must match with the configured in the previous disks variables (example 0,1,2#3#4#5#6)\n    sizes -> The size dedicated for each logical volume and folder (example 70,100#100#100#100#100)\n    paths -> Folder where each volume group will be mounted (example /hana/data,/hana/log#/hana/shared#/usr/sap#/hana/backup#/sapmnt/)\n"
              },
              "hana_enable_accelerated_networking": {
                "default": false,
                "description": "Enable accelerated networking. This function is mandatory for certified HANA environments and are not available for all kinds of instances. Check https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-cli for more details"
              },
              "hana_extract_dir": {
                "default": "/sapmedia_extract/HANA",
                "description": "Absolute path to folder where SAP HANA archive will be extracted. This folder cannot be the same as `hana_inst_folder`!"
              },
              "hana_fstype": {
                "default": "xfs",
                "description": "Filesystem type used by the disk where hana is installed"
              },
              "hana_ha_enabled": {
                "default": true,
                "description": "Enable HA cluster in top of HANA system replication"
              },
              "hana_inst_folder": {
                "default": "/sapmedia/HANA",
                "description": "Folder where the hana installation software will be downloaded"
              },
              "hana_inst_master": {
                "description": "Azure storage account path where hana installation software is available"
              },
              "hana_instance_number": {
                "default": "00",
                "description": "Instance number of the HANA system. It must be a 2 digits string. Examples: 00, 01, 10"
              },
              "hana_ips": {
                "default": [

                ],
                "description": "ip addresses to set to the hana nodes. If it's not set the addresses will be auto generated from the provided vnet address range"
              },
              "hana_master_password": {
                "description": "Master password for the HANA system (sidadm user included)"
              },
              "hana_os_image": {
                "default": "",
                "description": "sles4sap image used to create the HANA machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "hana_platform_folder": {
                "default": "",
                "description": "Path to the hana platform media, relative to the 'hana_inst_master' mounting point"
              },
              "hana_primary_site": {
                "default": "Site1",
                "description": "HANA system replication primary site name"
              },
              "hana_sapcar_exe": {
                "default": "",
                "description": "Path to the sapcar executable, relative to the 'hana_inst_master' mounting point. Only needed if HANA installation software comes in a SAR file (like IMDB_SERVER.SAR)"
              },
              "hana_secondary_site": {
                "default": "Site2",
                "description": "HANA system replication secondary site name"
              },
              "hana_sid": {
                "default": "prd",
                "description": "System identifier of the HANA system. It must be a 3 characters string (check the restrictions in the SAP documentation pages). Examples: prd, ha1"
              },
              "hana_vm_size": {
                "default": "Standard_E4s_v3",
                "description": "VM size for the hana machine"
              },
              "hwcct": {
                "default": false,
                "description": "Execute HANA Hardware Configuration Check Tool to bench filesystems"
              },
              "iscsi_disk_size": {
                "default": 10,
                "description": "Disk size in GB used to create the LUNs and partitions to be served by the ISCSI service"
              },
              "iscsi_lun_count": {
                "default": 3,
                "description": "Number of LUN (logical units) to serve with the iscsi server. Each LUN can be used as a unique sbd disk"
              },
              "iscsi_os_image": {
                "default": "",
                "description": "sles4sap image used to create the ISCSI machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "iscsi_srv_ip": {
                "default": "",
                "description": "iscsi server address. If it's not set the address will be auto generated from the provided vnet address range"
              },
              "iscsi_srv_uri": {
                "default": "",
                "description": "Path to a custom azure image in a storage account used to create the iscsi machines"
              },
              "iscsi_vm_size": {
                "default": "Standard_D2s_v3",
                "description": "VM size for the iscsi server machine"
              },
              "monitoring_enabled": {
                "default": false,
                "description": "Enable the host to be monitored by exporters, e.g node_exporter"
              },
              "monitoring_os_image": {
                "default": "",
                "description": "sles4sap image used to create the Monitoring server machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "monitoring_srv_ip": {
                "default": "",
                "description": "monitoring server address. If it's not set the address will be auto generated from the provided vnet address range"
              },
              "monitoring_uri": {
                "default": "",
                "description": "Path to a custom azure image in a storage account used to create the monitoring machines"
              },
              "monitoring_vm_size": {
                "default": "Standard_D2s_v3",
                "description": "VM size for the monitoring machine"
              },
              "name": {
                "default": "hana",
                "description": "hostname, without the domain part"
              },
              "netweaver_additional_dvds": {
                "default": [

                ],
                "description": "Software folder with additional SAP software needed to install netweaver (NW export folder and HANA HDB client for example), path relative from the `netweaver_inst_media` mounted point"
              },
              "netweaver_app_accelerated_networking": {
                "default": false,
                "description": "Enable accelerated networking for netweaver application server machines"
              },
              "netweaver_app_server_count": {
                "default": 2,
                "description": "Number of PAS/AAS servers (1 PAS and the rest will be AAS). 0 means that the PAS is installed in the same machines as the ASCS"
              },
              "netweaver_app_vm_size": {
                "default": "Standard_D2s_v3",
                "description": "VM size for the Netweaver application servers"
              },
              "netweaver_ascs_instance_number": {
                "default": "00",
                "description": "Instance number of the ASCS system. It must be a 2 digits string. Examples: 00, 01, 10"
              },
              "netweaver_cluster_fencing_mechanism": {
                "default": "sbd",
                "description": "Select the Netweaver cluster fencing mechanism. Options: sbd"
              },
              "netweaver_data_disk_caching": {
                "default": "ReadWrite",
                "description": "Disk caching of the disks used to store netweaver content in the application servers"
              },
              "netweaver_data_disk_size": {
                "default": "128",
                "description": "Size of the netweaver data disks in the application servers, informed in GB"
              },
              "netweaver_data_disk_type": {
                "default": "Premium_LRS",
                "description": "Disk type of the disks used to store netweaver content in the application servers"
              },
              "netweaver_enabled": {
                "default": false,
                "description": "Enable SAP Netweaver cluster deployment"
              },
              "netweaver_ers_instance_number": {
                "default": "10",
                "description": "Instance number of the ERS system. It must be a 2 digits string. Examples: 00, 01, 10"
              },
              "netweaver_extract_dir": {
                "default": "/sapmedia_extract/NW",
                "description": "Extraction path for Netweaver media archives of SWPM and netweaver additional dvds"
              },
              "netweaver_ha_enabled": {
                "default": true,
                "description": "Enable HA cluster in top of Netweaver ASCS and ERS instances"
              },
              "netweaver_image_uri": {
                "default": "",
                "description": "Path to a custom azure image in a storage account used to create the netweaver machines"
              },
              "netweaver_inst_folder": {
                "default": "/sapmedia/NW",
                "description": "Folder where SAP Netweaver installation files are mounted"
              },
              "netweaver_ips": {
                "default": [

                ],
                "description": "ip addresses to set to the netweaver cluster nodes. If it's not set the addresses will be auto generated from the provided vnet address range"
              },
              "netweaver_master_password": {
                "description": "Master password for the Netweaver system (sidadm user included)"
              },
              "netweaver_nfs_share": {
                "default": "",
                "description": "NFS share used to store shared netweaver files. This parameter can be omitted if drbd_enabled is set to true, as a HA nfs share will be deployed by the project"
              },
              "netweaver_os_image": {
                "default": "",
                "description": "sles4sap image used to create the Netweaver machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: SUSE:sles-sap-15-sp2:gen2:latest"
              },
              "netweaver_pas_instance_number": {
                "default": "01",
                "description": "Instance number of the PAS system. It must be a 2 digits string. Examples: 00, 01, 10"
              },
              "netweaver_product_id": {
                "default": "NW750.HDB.ABAPHA",
                "description": "Netweaver installation product. Even though the module is about Netweaver, it can be used to install other SAP instances like S4/HANA"
              },
              "netweaver_sapcar_exe": {
                "default": "",
                "description": "Path to sapcar executable, relative from the `netweaver_inst_media` mounted point"
              },
              "netweaver_sapexe_folder": {
                "default": "",
                "description": "Software folder where needed sapexe `SAR` executables are stored (sapexe, sapexedb, saphostagent), path relative from the `netweaver_inst_media` mounted point"
              },
              "netweaver_sid": {
                "default": "HA1",
                "description": "System identifier of the Netweaver installation (e.g.: HA1 or PRD)"
              },
              "netweaver_storage_account": {
                "default": "",
                "description": "Azure storage account path"
              },
              "netweaver_storage_account_key": {
                "default": "",
                "description": "Azure storage account access key"
              },
              "netweaver_storage_account_name": {
                "default": "",
                "description": "Azure storage account where SAP Netweaver installation files are stored"
              },
              "netweaver_swpm_folder": {
                "default": "",
                "description": "Netweaver software SWPM folder, path relative from the `netweaver_inst_media` mounted point"
              },
              "netweaver_swpm_sar": {
                "default": "",
                "description": "SWPM installer sar archive containing the installer, path relative from the `netweaver_inst_media` mounted point"
              },
              "netweaver_virtual_ips": {
                "default": [

                ],
                "description": "Virtual ip addresses to set to the netweaver cluster nodes. If it's not set the addresses will be auto generated from the provided vnet address range"
              },
              "netweaver_xscs_accelerated_networking": {
                "default": false,
                "description": "Enable accelerated networking for netweaver xSCS machines"
              },
              "netweaver_xscs_vm_size": {
                "default": "Standard_D2s_v3",
                "description": "VM size for the Netweaver xSCS machines"
              },
              "os_image": {
                "default": "SUSE:sles-sap-15-sp2:gen2:latest",
                "description": "Default OS image for all the machines. Composed by 'Publisher:Offer:Sku:Version' syntax. Example: 'SUSE:sles-sap-15-sp2:gen2:latest'. This value is not used if the specific nodes os_image is set (e.g. hana_os_image)"
              },
              "pre_deployment": {
                "default": false,
                "description": "Enable pre deployment local execution. Only available for clients running Linux"
              },
              "private_key": {
                "description": "Content of a SSH private key or path to an already existing SSH private key. The key is only used to provision the machines. It is not uploaded to the machines in any case"
              },
              "provisioner": {
                "default": "salt",
                "description": "Used provisioner option. Available options: salt. Let empty to not use any provisioner"
              },
              "provisioning_log_level": {
                "default": "error",
                "description": "Provisioning process log level. For salt: https://docs.saltstack.com/en/latest/ref/configuration/logging/index.html"
              },
              "public_key": {
                "description": "Content of a SSH public key or path to an already existing SSH public key. The key is only used to provision the machines and it is authorized for future accesses"
              },
              "qa_mode": {
                "default": false,
                "description": "Enable test/qa mode (disable extra packages usage not coming in the image)"
              },
              "reg_additional_modules": {
                "default": {
                },
                "description": "Map of the modules to be registered. Module name = Regcode, when needed."
              },
              "reg_code": {
                "default": "",
                "description": "If informed, register the product using SUSEConnect"
              },
              "reg_email": {
                "default": "",
                "description": "Email used for the registration"
              },
              "resource_group_name": {
                "default": "",
                "description": "Already existing resource group where the infrastructure is created. If it's not set a new one will be created named rg-ha-sap-{{var.deployment_name/terraform.workspace}}"
              },
              "sbd_storage_type": {
                "default": "iscsi",
                "description": "Choose the SBD storage type. Options: iscsi"
              },
              "scenario_type": {
                "default": "performance-optimized",
                "description": "Deployed scenario type. Available options: performance-optimized, cost-optimized"
              },
              "sles4sap_uri": {
                "default": "",
                "description": "Path to a custom azure image in a storage account used to create the hana machines"
              },
              "storage_account_key": {
                "description": "Azure storage account secret key"
              },
              "storage_account_name": {
                "description": "Azure storage account name where HANA insallation software is available"
              },
              "subnet_address_range": {
                "default": "",
                "description": "subnet address range in CIDR notation (only used if the subnet is created by terraform or the user doesn't have read permissions in this resource. To use the current vnet address range set the value to an empty string)"
              },
              "subnet_name": {
                "default": "",
                "description": "Already existing subnet name used by the created infrastructure. If it's not set a new one will be created named snet-{{var.deployment_name/terraform.workspace}}"
              },
              "timezone": {
                "default": "Europe/Berlin",
                "description": "Timezone setting for all VMs"
              },
              "vnet_address_range": {
                "default": "10.74.0.0/16",
                "description": "vnet address range in CIDR notation (only used if the vnet is created by terraform or the user doesn't have read permissions in this resource. To use the current vnet address range set the value to an empty string)"
              },
              "vnet_name": {
                "default": "",
                "description": "Already existing virtual network name used by the created infrastructure. If it's not set a new one will be created named vnet-{{var.deployment_name/terraform.workspace}}"
              }
            }
          }
        }
      },
      "variables": {
        "azure_region": {
          "default": "westeurope",
          "description": "Azure region where the machines will be created<!-- [group:Azure_configuration] -->"
        },
        "deployment_name": {
          "description": "Suffix string added to some of the infrastructure resources names such as the resource group (rsg-ha-sap-${deployment_name})<!-- [group:Azure_configuration] [pattern:/^[a-zA-Z0-9_.()-]{1,89}[^.]$/] [extra_information:Resource group names only allow alphanumeric characters, periods, underscores, hyphens and parenthesis and cannot end with a period] -->"
        },
        "hana_ha_enabled": {
          "default": true,
          "description": "<!-- [group:HANA_configuration] -->"
        },
        "hana_installation_software_path": {
          "description": "Path to the folder where the SAP HANA installation software is uploaded in the Storage account. It is composed of the file share name and the uploaded HANA folder or archive file. For example: myshare/51053381_part1.exe or myshare/51053381<!-- [group:HANA_configuration] -->"
        },
        "instance_number": {
          "default": "00",
          "description": "HANA system instance number. Instance number must be 2 digits<!-- [group:HANA_configuration] [pattern:/^[0-9]{2}$/] [extra_information:2 digits string] -->"
        },
        "instance_type": {
          "default": "sap_hana_demo",
          "description": "<!-- [group:HANA_configuration] -->"
        },
        "os_admnistrator_name": {
          "default": "cloudadmin",
          "description": "Name of the OS user created in the machines<!-- [group:Azure_configuration] -->"
        },
        "sap_admin_password": {
          "description": "SAP administrator password. It is used to access to the sidadm user<!-- password_key [group:HANA_configuration] [pattern:/^[A-Za-z0-9.]{1}(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[A-Za-z0-9]{7,}$/] [extra_information:The password must contain, at least 8 characters, 1 digit, 1 upper-case character, 1 lower-case character and does not accept special characters]-->"
        },
        "ssh_authorized_key_file": {
          "description": "SSH public key file that will be authorized to access the machines with OS admin username<!-- file_key [group:Azure_configuration] -->"
        },
        "storage_account_key": {
          "description": "Azure storage account access key<!-- password_key [group:Azure_configuration] -->"
        },
        "storage_account_name": {
          "description": "Azure storage account where the file share with the SAP installation software is located<!-- [group:Azure_configuration] -->"
        },
        "system_identifier": {
          "default": "PRD",
          "description": "HANA SID. The System identifier (SID) must be 3 characters<!-- [group:HANA_configuration] [pattern:/^(?!ADD|ALL|AND|ANY|ASC|COM|DBA|END|EPS|FOR|GID|IBM|INT|KEY|LOG|MON|NIX|NOT|OFF|OMS|RAW|ROW|SAP|SET|SGA|SHG|SID|SQL|SYS|TMP|UID|USR|VAR)[A-Z][A-Z0-9]{2}$/] [extra_information:3 upper case characters string (2nd and 3rd can be digits). Following options are not allowed: ADD|ALL|AND|ANY|ASC|COM|DBA|END|EPS|FOR|GID|IBM|INT|KEY|LOG|MON|NIX|NOT|OFF|OMS|RAW|ROW|SAP|SET|SGA|SHG|SID|SQL|SYS|TMP|UID|USR|VAR] -->"
        }
      }
    }
  }
}