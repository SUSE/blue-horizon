# Copy to vendor/locales/[LANGUAGE_KEY].yml
# Adjust the language key below

en:
  # Application title - shown on the home page
  title: "SUSE SAP Console"
  # Abbreviated title for use in navigation
  short_title: "SUSE SAP Console"
  # Sidebar
  sidebar:
    welcome: "Deployment"
    cluster: "SAP System Size"
    variables: "Installation Properties"
    plan: "Review and Confirm"
    deploy: "Deploy"
    home: "Finish"
  # Menu translation
  menu:
    monitor: Monitoring
    tuning: Tuning
    resources: Resources
  # Brief tag line shown below the title
  lead: "Deploy your SAP Landscapes using SLES4SAP in Azure"

  page_title:
    cluster: "SAP System size"
    plan: "Review and Confirm"
    deploy: "Deploy your SAP environment"
    home: "Welcome to your SUSE SAP console"
    source: "Working directly with deployment source scripts"
    resources: "Additional resources"

  page_subtitle:
    hana_ha_info: |
      High Available clustering and system replication option creates a clustered environment with 2 SAP HANA nodes, providing a resilient landscape that reduces downtime but increases cost.
    hana_ha_enabled_label: |
      HA clustering and System Replication
    cluster_info: |
      Select the High Availability options and size of the SAP environment.
    plan_info: |
      Review the planned deployment based in the configuration selected in the previous page.
    deploy_info: |
      Deploy your SAP environment. Keep in mind that SAP installation might take a huge amount of time, so be patient. Click **Apply** button when you are ready to start.
    home_info: |
      Your application has been deployed, here's how to use it. [Download](/download) your results and follow the instructions below.
    resources_info: |
      Find here additional resources to use the project. [Download](/download) your results and follow the instructions below.

  # Long-form description of the application
  # Markdown syntax is accepted - see https://daringfireball.net/projects/markdown/syntax
  #
  ## Note: to minimize the text on the page, i would like to move the details with the software
  ## out to a webpage/document instead of showing it here
  #
  description: |
    The solution will deploy the needed Azure infrastructure for SAP Netweaver and SAP HANA
    and provision and configure the virtual machines and install the SAP application for you.

    As SAP sizing can be complex, a simplified sizing approach is used.
    With the well known concept of T-Shirt sizes S,M,L we provide a simple way of using different settings.

    Behind such T-Shirt sizes, we use the right Azure instance and the needed number of disks with the right size.
    The Demo and S size are thought for non-production, the M and L will use SAP certified instance types and can be used for production scenarios.
    Below is a rought estimation about the SAPS behind the three sizes:

    * Small  <  30.000 SAPS
    * Medium <  70.000 SAPS
    * Large  < 180.000 SAPS

    **Please be aware that it may require a high amount of resources, therefore an increase of your quota could be necessary**.

    Read the **Pre-requirements** and **Setting up the Storage account** chapters to understand how to use the SAP installation software.

    For a more advanced customization you will need to get your hands dirty and work directly with the source project: https://github.com/SUSE/ha-sap-terraform-deployments

    <details>
    <summary class="welcome">Pre-requirements</summary>

    <ol>
    <li><span>Create an Azure Service Principal. This can be done either by using the Azure portal or the <code>az</code> CLI.</span>
    <ul>
    <li><span>Follow the instrucions in <a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_client_secret">this link</a> in order to create the Service Principal using the Azure portal.</span></li>
    <li><span>Use the <code>az ad sp create-for-rbac</code> command. Find more information <a href="https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli">here.</a>The data provided as output from this function will be required in the next steps.</span></li>
    </ul>
    <span>Note the SP must have sufficient privileges, the created account must have at least Contributor.
    </li>
    <li><span>You need to have ssh-keys to be able to access the deployed machines.</span></li>
    <li><p>The SAP software must be available in Azure, in order to be installed by the solution.</p>

    <span>The SAP software can be downloaded from <a href="https://launchpad.support.sap.com/#/softwarecenter">https://launchpad.support.sap.com/#/softwarecenter</a></span></li>
    <li><p>In order to provide the SAP software in Azure, please create a storage account in your Azure subscription and upload the downloaded format to a file share.
    See Microsoft documentation
    <a href="https://docs.microsoft.com/en-us/azure/storage/files/storage-how-to-create-file-share?tabs=azure-portal#create-a-storage-account">Howto create a storage account</a></p>

    <p><strong>This storage account has an account name and key. Store them as they are needed in the next steps.</strong> They can be collected from the Azure portal.</p></li>
    </ol>
    </details>
    </p class="clearfix">
    <details>
    <summary class="welcome">Setting up the Storage account</summary>
    <h3>Download SAP HANA platform</h3>

    <span>The project uses the SAP HANA platform achive to install the database. Follow the next instructions to download it</span>

    <ol>
    <li><span>Access the <a href="https://launchpad.support.sap.com/#/softwarecenter">SAP download center</a></span>
    <li><p>Find the SAP HANA Platform edition. Follow the next path: <b>Installation & Upgrades > By Alphabetical Index (A-Z) > H > SAP HANA PLATFORM EDITION > SAP HANA PLATFORM EDITION 2.0</b></p>
    <img src="vendor/download_center.png" alt="download center" width="600px"></li>
    <li><span>Download the desired version</span></li>
    </ol>

    <h3>Create the storage account</h3>

    <span>Follow the next instructions to create and setup the Storage account/span>

    <ol>
    <li><p>Create a new storage account</p>
    <table><tr>
    <td class="right"><img src="vendor/storage_account_create.png" alt="add storage account" width="400px"></td>
    <td class="left"><img src="vendor/storage_account_create_2.png" alt="add storage account" width="300px"></td>
    </tr></table></li>

    <li><p>Create a File shares in the Storage account with a new File share</p>
    <table><tr>
    <td><img src="vendor/storage_account_create_3.png" alt="create file share" width="800px">
    <img src="vendor/storage_account_create_4.png" alt="create file share" width="500px"></td>
    </tr></table></li>

    <li><p>Upload the previously downloaded SAP HANA Platform edition ZIP file</p>
    <img src="vendor/storage_account_create_5.png" alt="create file share"></li>

    <li><p>Get the access key that will be used later during the configuration</p>
    <table><tr>
    <td class="right"><img src="vendor/storage_account_create_6.png" alt="access keys"></td>
    <td><img src="vendor/storage_account_create_7.png" alt="access keys" width="600px"></td>
    </tr></table></li>

    </details>

  # Long-form description of steps to take after deployment
  # Markdown syntax is accepted - see https://daringfireball.net/projects/markdown/syntax
  next_steps: |
    Your SAP environment has been created successfully.
    You can find the created resources <a href="%{resource_group_url}" target="_blank">clicking here</a>.

    Now, you can continue using the SAP console to **monitor** and **tune** the created machines using the top menu.

    Besides that, you can download the files created during the deployment. Check for more options in the **resources** tab.

  resources_content: |
    <h3>Destroying the deployment</h3>
    <p>Destroy the created deployment following the next steps:<p>
    <ol>
    <li><span>Download and install terraform v0.13.4 locally. Find the package <a href="https://releases.hashicorp.com/terraform/0.13.4/terraform_0.13.4_linux_amd64.zip" target="_blank">here</a></span></li>
    <li><span>Download and extract the archive provided at the top of this page</span></li>
    <li><span>Access to the extracted folder</span></li>
    <li><span>Destroy the resources running the next commands:</span></li>
    <ul>
    <li><code>terraform init</code></li>
    <li><code>terraform destroy -auto-approve</code></li>
    </ul>
    </ol>
    </details>
    </p class="clearfix">
    <hr>
    <h3>Automating the deployment</h3>
    <p>The deployment performed using this tool can be automated to add it to any other process. Follow the next steps for that:<p>
    <ol>
    <li><span>Download and install terraform v0.13.4 locally. Find the package <a href="https://releases.hashicorp.com/terraform/0.13.4/terraform_0.13.4_linux_amd64.zip" target="_blank">here</a></span></li>
    <li><span>Download and extract the archive provided at the top of this page</span></li>
    <li><span>Access to the extracted folder</span></li>
    <li><span>Update the desired parameters in the <i>terraform.tfvars.json</i> file (<b>Remember that the deployment name must be unique</b>)</span></li>
    <li><span>Remove the <i>terraform.tfstate</i> file to reset to a new deployment</span></li>
    <li><span>Execute the deployment running the next commands:</span></li>
    <ul>
    <li><code>terraform init</code></li>
    <li><code>terraform apply -auto-approve</code></li>
    </ul>
    </ol>

  footer: "Â© 2019-2020 SUSE, all rights reserved."
